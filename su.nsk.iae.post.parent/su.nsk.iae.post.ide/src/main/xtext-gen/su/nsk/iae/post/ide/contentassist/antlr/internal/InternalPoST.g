/*
 * generated by Xtext 2.25.0
 */
grammar InternalPoST;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package su.nsk.iae.post.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package su.nsk.iae.post.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import su.nsk.iae.post.services.PoSTGrammarAccess;

}
@parser::members {
	private PoSTGrammarAccess grammarAccess;

	public void setGrammarAccess(PoSTGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getUnorderedGroup()); }
		(rule__Model__UnorderedGroup)
		{ after(grammarAccess.getModelAccess().getUnorderedGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfiguration
entryRuleConfiguration
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationAccess().getGroup()); }
		(rule__Configuration__Group__0)
		{ after(grammarAccess.getConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResource
entryRuleResource
:
{ before(grammarAccess.getResourceRule()); }
	 ruleResource
{ after(grammarAccess.getResourceRule()); } 
	 EOF 
;

// Rule Resource
ruleResource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResourceAccess().getGroup()); }
		(rule__Resource__Group__0)
		{ after(grammarAccess.getResourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleResource
entryRuleSingleResource
:
{ before(grammarAccess.getSingleResourceRule()); }
	 ruleSingleResource
{ after(grammarAccess.getSingleResourceRule()); } 
	 EOF 
;

// Rule SingleResource
ruleSingleResource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleResourceAccess().getGroup()); }
		(rule__SingleResource__Group__0)
		{ after(grammarAccess.getSingleResourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTaskInitialization
entryRuleTaskInitialization
:
{ before(grammarAccess.getTaskInitializationRule()); }
	 ruleTaskInitialization
{ after(grammarAccess.getTaskInitializationRule()); } 
	 EOF 
;

// Rule TaskInitialization
ruleTaskInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskInitializationAccess().getAlternatives()); }
		(rule__TaskInitialization__Alternatives)
		{ after(grammarAccess.getTaskInitializationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgramConfiguration
entryRuleProgramConfiguration
:
{ before(grammarAccess.getProgramConfigurationRule()); }
	 ruleProgramConfiguration
{ after(grammarAccess.getProgramConfigurationRule()); } 
	 EOF 
;

// Rule ProgramConfiguration
ruleProgramConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramConfigurationAccess().getGroup()); }
		(rule__ProgramConfiguration__Group__0)
		{ after(grammarAccess.getProgramConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgramConfElements
entryRuleProgramConfElements
:
{ before(grammarAccess.getProgramConfElementsRule()); }
	 ruleProgramConfElements
{ after(grammarAccess.getProgramConfElementsRule()); } 
	 EOF 
;

// Rule ProgramConfElements
ruleProgramConfElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramConfElementsAccess().getGroup()); }
		(rule__ProgramConfElements__Group__0)
		{ after(grammarAccess.getProgramConfElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgramConfElement
entryRuleProgramConfElement
:
{ before(grammarAccess.getProgramConfElementRule()); }
	 ruleProgramConfElement
{ after(grammarAccess.getProgramConfElementRule()); } 
	 EOF 
;

// Rule ProgramConfElement
ruleProgramConfElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramConfElementAccess().getAlternatives()); }
		(rule__ProgramConfElement__Alternatives)
		{ after(grammarAccess.getProgramConfElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttachVariableConfElement
entryRuleAttachVariableConfElement
:
{ before(grammarAccess.getAttachVariableConfElementRule()); }
	 ruleAttachVariableConfElement
{ after(grammarAccess.getAttachVariableConfElementRule()); } 
	 EOF 
;

// Rule AttachVariableConfElement
ruleAttachVariableConfElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getGroup()); }
		(rule__AttachVariableConfElement__Group__0)
		{ after(grammarAccess.getAttachVariableConfElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemplateProcessConfElement
entryRuleTemplateProcessConfElement
:
{ before(grammarAccess.getTemplateProcessConfElementRule()); }
	 ruleTemplateProcessConfElement
{ after(grammarAccess.getTemplateProcessConfElementRule()); } 
	 EOF 
;

// Rule TemplateProcessConfElement
ruleTemplateProcessConfElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemplateProcessConfElementAccess().getGroup()); }
		(rule__TemplateProcessConfElement__Group__0)
		{ after(grammarAccess.getTemplateProcessConfElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemplateProcessElements
entryRuleTemplateProcessElements
:
{ before(grammarAccess.getTemplateProcessElementsRule()); }
	 ruleTemplateProcessElements
{ after(grammarAccess.getTemplateProcessElementsRule()); } 
	 EOF 
;

// Rule TemplateProcessElements
ruleTemplateProcessElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemplateProcessElementsAccess().getGroup()); }
		(rule__TemplateProcessElements__Group__0)
		{ after(grammarAccess.getTemplateProcessElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTemplateProcessAttachVariableConfElement
entryRuleTemplateProcessAttachVariableConfElement
:
{ before(grammarAccess.getTemplateProcessAttachVariableConfElementRule()); }
	 ruleTemplateProcessAttachVariableConfElement
{ after(grammarAccess.getTemplateProcessAttachVariableConfElementRule()); } 
	 EOF 
;

// Rule TemplateProcessAttachVariableConfElement
ruleTemplateProcessAttachVariableConfElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getGroup()); }
		(rule__TemplateProcessAttachVariableConfElement__Group__0)
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionBlock
entryRuleFunctionBlock
:
{ before(grammarAccess.getFunctionBlockRule()); }
	 ruleFunctionBlock
{ after(grammarAccess.getFunctionBlockRule()); } 
	 EOF 
;

// Rule FunctionBlock
ruleFunctionBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getGroup()); }
		(rule__FunctionBlock__Group__0)
		{ after(grammarAccess.getFunctionBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleState
entryRuleState
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateAccess().getGroup()); }
		(rule__State__Group__0)
		{ after(grammarAccess.getStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetStateStatement
entryRuleSetStateStatement
:
{ before(grammarAccess.getSetStateStatementRule()); }
	 ruleSetStateStatement
{ after(grammarAccess.getSetStateStatementRule()); } 
	 EOF 
;

// Rule SetStateStatement
ruleSetStateStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSetStateStatementAccess().getGroup()); }
		(rule__SetStateStatement__Group__0)
		{ after(grammarAccess.getSetStateStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessStatements
entryRuleProcessStatements
:
{ before(grammarAccess.getProcessStatementsRule()); }
	 ruleProcessStatements
{ after(grammarAccess.getProcessStatementsRule()); } 
	 EOF 
;

// Rule ProcessStatements
ruleProcessStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessStatementsAccess().getAlternatives()); }
		(rule__ProcessStatements__Alternatives)
		{ after(grammarAccess.getProcessStatementsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessStatusExpression
entryRuleProcessStatusExpression
:
{ before(grammarAccess.getProcessStatusExpressionRule()); }
	 ruleProcessStatusExpression
{ after(grammarAccess.getProcessStatusExpressionRule()); } 
	 EOF 
;

// Rule ProcessStatusExpression
ruleProcessStatusExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getGroup()); }
		(rule__ProcessStatusExpression__Group__0)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStartProcessStatement
entryRuleStartProcessStatement
:
{ before(grammarAccess.getStartProcessStatementRule()); }
	 ruleStartProcessStatement
{ after(grammarAccess.getStartProcessStatementRule()); } 
	 EOF 
;

// Rule StartProcessStatement
ruleStartProcessStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStartProcessStatementAccess().getAlternatives()); }
		(rule__StartProcessStatement__Alternatives)
		{ after(grammarAccess.getStartProcessStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStopProcessStatement
entryRuleStopProcessStatement
:
{ before(grammarAccess.getStopProcessStatementRule()); }
	 ruleStopProcessStatement
{ after(grammarAccess.getStopProcessStatementRule()); } 
	 EOF 
;

// Rule StopProcessStatement
ruleStopProcessStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStopProcessStatementAccess().getGroup()); }
		(rule__StopProcessStatement__Group__0)
		{ after(grammarAccess.getStopProcessStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleErrorProcessStatement
entryRuleErrorProcessStatement
:
{ before(grammarAccess.getErrorProcessStatementRule()); }
	 ruleErrorProcessStatement
{ after(grammarAccess.getErrorProcessStatementRule()); } 
	 EOF 
;

// Rule ErrorProcessStatement
ruleErrorProcessStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getErrorProcessStatementAccess().getGroup()); }
		(rule__ErrorProcessStatement__Group__0)
		{ after(grammarAccess.getErrorProcessStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeoutStatement
entryRuleTimeoutStatement
:
{ before(grammarAccess.getTimeoutStatementRule()); }
	 ruleTimeoutStatement
{ after(grammarAccess.getTimeoutStatementRule()); } 
	 EOF 
;

// Rule TimeoutStatement
ruleTimeoutStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getGroup()); }
		(rule__TimeoutStatement__Group__0)
		{ after(grammarAccess.getTimeoutStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResetTimerStatement
entryRuleResetTimerStatement
:
{ before(grammarAccess.getResetTimerStatementRule()); }
	 ruleResetTimerStatement
{ after(grammarAccess.getResetTimerStatementRule()); } 
	 EOF 
;

// Rule ResetTimerStatement
ruleResetTimerStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResetTimerStatementAccess().getGroup()); }
		(rule__ResetTimerStatement__Group__0)
		{ after(grammarAccess.getResetTimerStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFBInvocation
entryRuleFBInvocation
:
{ before(grammarAccess.getFBInvocationRule()); }
	 ruleFBInvocation
{ after(grammarAccess.getFBInvocationRule()); } 
	 EOF 
;

// Rule FBInvocation
ruleFBInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFBInvocationAccess().getGroup()); }
		(rule__FBInvocation__Group__0)
		{ after(grammarAccess.getFBInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamAssignmentElements
entryRuleParamAssignmentElements
:
{ before(grammarAccess.getParamAssignmentElementsRule()); }
	 ruleParamAssignmentElements
{ after(grammarAccess.getParamAssignmentElementsRule()); } 
	 EOF 
;

// Rule ParamAssignmentElements
ruleParamAssignmentElements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAssignmentElementsAccess().getGroup()); }
		(rule__ParamAssignmentElements__Group__0)
		{ after(grammarAccess.getParamAssignmentElementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamAssignment
entryRuleParamAssignment
:
{ before(grammarAccess.getParamAssignmentRule()); }
	 ruleParamAssignment
{ after(grammarAccess.getParamAssignmentRule()); } 
	 EOF 
;

// Rule ParamAssignment
ruleParamAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamAssignmentAccess().getGroup()); }
		(rule__ParamAssignment__Group__0)
		{ after(grammarAccess.getParamAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getGroup()); }
		(rule__Expression__Group__0)
		{ after(grammarAccess.getExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXorExpression
entryRuleXorExpression
:
{ before(grammarAccess.getXorExpressionRule()); }
	 ruleXorExpression
{ after(grammarAccess.getXorExpressionRule()); } 
	 EOF 
;

// Rule XorExpression
ruleXorExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXorExpressionAccess().getGroup()); }
		(rule__XorExpression__Group__0)
		{ after(grammarAccess.getXorExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompExpression
entryRuleCompExpression
:
{ before(grammarAccess.getCompExpressionRule()); }
	 ruleCompExpression
{ after(grammarAccess.getCompExpressionRule()); } 
	 EOF 
;

// Rule CompExpression
ruleCompExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompExpressionAccess().getGroup()); }
		(rule__CompExpression__Group__0)
		{ after(grammarAccess.getCompExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEquExpression
entryRuleEquExpression
:
{ before(grammarAccess.getEquExpressionRule()); }
	 ruleEquExpression
{ after(grammarAccess.getEquExpressionRule()); } 
	 EOF 
;

// Rule EquExpression
ruleEquExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEquExpressionAccess().getGroup()); }
		(rule__EquExpression__Group__0)
		{ after(grammarAccess.getEquExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddExpression
entryRuleAddExpression
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
		(rule__AddExpression__Group__0)
		{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMulExpression
entryRuleMulExpression
:
{ before(grammarAccess.getMulExpressionRule()); }
	 ruleMulExpression
{ after(grammarAccess.getMulExpressionRule()); } 
	 EOF 
;

// Rule MulExpression
ruleMulExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMulExpressionAccess().getGroup()); }
		(rule__MulExpression__Group__0)
		{ after(grammarAccess.getMulExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePowerExpression
entryRulePowerExpression
:
{ before(grammarAccess.getPowerExpressionRule()); }
	 rulePowerExpression
{ after(grammarAccess.getPowerExpressionRule()); } 
	 EOF 
;

// Rule PowerExpression
rulePowerExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getGroup()); }
		(rule__PowerExpression__Group__0)
		{ after(grammarAccess.getPowerExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
		(rule__UnaryExpression__Alternatives)
		{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
		(rule__PrimaryExpression__Alternatives)
		{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementList
entryRuleStatementList
:
{ before(grammarAccess.getStatementListRule()); }
	 ruleStatementList
{ after(grammarAccess.getStatementListRule()); } 
	 EOF 
;

// Rule StatementList
ruleStatementList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementListAccess().getGroup()); }
		(rule__StatementList__Group__0)
		{ after(grammarAccess.getStatementListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentStatement
entryRuleAssignmentStatement
:
{ before(grammarAccess.getAssignmentStatementRule()); }
	 ruleAssignmentStatement
{ after(grammarAccess.getAssignmentStatementRule()); } 
	 EOF 
;

// Rule AssignmentStatement
ruleAssignmentStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getGroup()); }
		(rule__AssignmentStatement__Group__0)
		{ after(grammarAccess.getAssignmentStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectionStatement
entryRuleSelectionStatement
:
{ before(grammarAccess.getSelectionStatementRule()); }
	 ruleSelectionStatement
{ after(grammarAccess.getSelectionStatementRule()); } 
	 EOF 
;

// Rule SelectionStatement
ruleSelectionStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
		(rule__SelectionStatement__Alternatives)
		{ after(grammarAccess.getSelectionStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseStatement
entryRuleCaseStatement
:
{ before(grammarAccess.getCaseStatementRule()); }
	 ruleCaseStatement
{ after(grammarAccess.getCaseStatementRule()); } 
	 EOF 
;

// Rule CaseStatement
ruleCaseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseStatementAccess().getGroup()); }
		(rule__CaseStatement__Group__0)
		{ after(grammarAccess.getCaseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseElement
entryRuleCaseElement
:
{ before(grammarAccess.getCaseElementRule()); }
	 ruleCaseElement
{ after(grammarAccess.getCaseElementRule()); } 
	 EOF 
;

// Rule CaseElement
ruleCaseElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseElementAccess().getGroup()); }
		(rule__CaseElement__Group__0)
		{ after(grammarAccess.getCaseElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseList
entryRuleCaseList
:
{ before(grammarAccess.getCaseListRule()); }
	 ruleCaseList
{ after(grammarAccess.getCaseListRule()); } 
	 EOF 
;

// Rule CaseList
ruleCaseList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseListAccess().getGroup()); }
		(rule__CaseList__Group__0)
		{ after(grammarAccess.getCaseListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCaseListElement
entryRuleCaseListElement
:
{ before(grammarAccess.getCaseListElementRule()); }
	 ruleCaseListElement
{ after(grammarAccess.getCaseListElementRule()); } 
	 EOF 
;

// Rule CaseListElement
ruleCaseListElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCaseListElementAccess().getAlternatives()); }
		(rule__CaseListElement__Alternatives)
		{ after(grammarAccess.getCaseListElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIterationStatement
entryRuleIterationStatement
:
{ before(grammarAccess.getIterationStatementRule()); }
	 ruleIterationStatement
{ after(grammarAccess.getIterationStatementRule()); } 
	 EOF 
;

// Rule IterationStatement
ruleIterationStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIterationStatementAccess().getAlternatives()); }
		(rule__IterationStatement__Alternatives)
		{ after(grammarAccess.getIterationStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForList
entryRuleForList
:
{ before(grammarAccess.getForListRule()); }
	 ruleForList
{ after(grammarAccess.getForListRule()); } 
	 EOF 
;

// Rule ForList
ruleForList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForListAccess().getGroup()); }
		(rule__ForList__Group__0)
		{ after(grammarAccess.getForListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRepeatStatement
entryRuleRepeatStatement
:
{ before(grammarAccess.getRepeatStatementRule()); }
	 ruleRepeatStatement
{ after(grammarAccess.getRepeatStatementRule()); } 
	 EOF 
;

// Rule RepeatStatement
ruleRepeatStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getGroup()); }
		(rule__RepeatStatement__Group__0)
		{ after(grammarAccess.getRepeatStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubprogramControlStatement
entryRuleSubprogramControlStatement
:
{ before(grammarAccess.getSubprogramControlStatementRule()); }
	 ruleSubprogramControlStatement
{ after(grammarAccess.getSubprogramControlStatementRule()); } 
	 EOF 
;

// Rule SubprogramControlStatement
ruleSubprogramControlStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubprogramControlStatementAccess().getGroup()); }
		(rule__SubprogramControlStatement__Group__0)
		{ after(grammarAccess.getSubprogramControlStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExitStatement
entryRuleExitStatement
:
{ before(grammarAccess.getExitStatementRule()); }
	 ruleExitStatement
{ after(grammarAccess.getExitStatementRule()); } 
	 EOF 
;

// Rule ExitStatement
ruleExitStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExitStatementAccess().getGroup()); }
		(rule__ExitStatement__Group__0)
		{ after(grammarAccess.getExitStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolicVariable
entryRuleSymbolicVariable
:
{ before(grammarAccess.getSymbolicVariableRule()); }
	 ruleSymbolicVariable
{ after(grammarAccess.getSymbolicVariableRule()); } 
	 EOF 
;

// Rule SymbolicVariable
ruleSymbolicVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolicVariableAccess().getNameAssignment()); }
		(rule__SymbolicVariable__NameAssignment)
		{ after(grammarAccess.getSymbolicVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleSpecificationInit
entryRuleSimpleSpecificationInit
:
{ before(grammarAccess.getSimpleSpecificationInitRule()); }
	 ruleSimpleSpecificationInit
{ after(grammarAccess.getSimpleSpecificationInitRule()); } 
	 EOF 
;

// Rule SimpleSpecificationInit
ruleSimpleSpecificationInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleSpecificationInitAccess().getGroup()); }
		(rule__SimpleSpecificationInit__Group__0)
		{ after(grammarAccess.getSimpleSpecificationInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarList
entryRuleVarList
:
{ before(grammarAccess.getVarListRule()); }
	 ruleVarList
{ after(grammarAccess.getVarListRule()); } 
	 EOF 
;

// Rule VarList
ruleVarList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarListAccess().getGroup()); }
		(rule__VarList__Group__0)
		{ after(grammarAccess.getVarListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarInitDeclaration
entryRuleVarInitDeclaration
:
{ before(grammarAccess.getVarInitDeclarationRule()); }
	 ruleVarInitDeclaration
{ after(grammarAccess.getVarInitDeclarationRule()); } 
	 EOF 
;

// Rule VarInitDeclaration
ruleVarInitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getGroup()); }
		(rule__VarInitDeclaration__Group__0)
		{ after(grammarAccess.getVarInitDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputVarDeclaration
entryRuleInputVarDeclaration
:
{ before(grammarAccess.getInputVarDeclarationRule()); }
	 ruleInputVarDeclaration
{ after(grammarAccess.getInputVarDeclarationRule()); } 
	 EOF 
;

// Rule InputVarDeclaration
ruleInputVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputVarDeclarationAccess().getGroup()); }
		(rule__InputVarDeclaration__Group__0)
		{ after(grammarAccess.getInputVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutputVarDeclaration
entryRuleOutputVarDeclaration
:
{ before(grammarAccess.getOutputVarDeclarationRule()); }
	 ruleOutputVarDeclaration
{ after(grammarAccess.getOutputVarDeclarationRule()); } 
	 EOF 
;

// Rule OutputVarDeclaration
ruleOutputVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputVarDeclarationAccess().getGroup()); }
		(rule__OutputVarDeclaration__Group__0)
		{ after(grammarAccess.getOutputVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputOutputVarDeclaration
entryRuleInputOutputVarDeclaration
:
{ before(grammarAccess.getInputOutputVarDeclarationRule()); }
	 ruleInputOutputVarDeclaration
{ after(grammarAccess.getInputOutputVarDeclarationRule()); } 
	 EOF 
;

// Rule InputOutputVarDeclaration
ruleInputOutputVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputOutputVarDeclarationAccess().getGroup()); }
		(rule__InputOutputVarDeclaration__Group__0)
		{ after(grammarAccess.getInputOutputVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarDeclaration
entryRuleVarDeclaration
:
{ before(grammarAccess.getVarDeclarationRule()); }
	 ruleVarDeclaration
{ after(grammarAccess.getVarDeclarationRule()); } 
	 EOF 
;

// Rule VarDeclaration
ruleVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getGroup()); }
		(rule__VarDeclaration__Group__0)
		{ after(grammarAccess.getVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTempVarDeclaration
entryRuleTempVarDeclaration
:
{ before(grammarAccess.getTempVarDeclarationRule()); }
	 ruleTempVarDeclaration
{ after(grammarAccess.getTempVarDeclarationRule()); } 
	 EOF 
;

// Rule TempVarDeclaration
ruleTempVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTempVarDeclarationAccess().getGroup()); }
		(rule__TempVarDeclaration__Group__0)
		{ after(grammarAccess.getTempVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalVarInitDeclaration
entryRuleExternalVarInitDeclaration
:
{ before(grammarAccess.getExternalVarInitDeclarationRule()); }
	 ruleExternalVarInitDeclaration
{ after(grammarAccess.getExternalVarInitDeclarationRule()); } 
	 EOF 
;

// Rule ExternalVarInitDeclaration
ruleExternalVarInitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalVarInitDeclarationAccess().getGroup()); }
		(rule__ExternalVarInitDeclaration__Group__0)
		{ after(grammarAccess.getExternalVarInitDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalVarDeclaration
entryRuleExternalVarDeclaration
:
{ before(grammarAccess.getExternalVarDeclarationRule()); }
	 ruleExternalVarDeclaration
{ after(grammarAccess.getExternalVarDeclarationRule()); } 
	 EOF 
;

// Rule ExternalVarDeclaration
ruleExternalVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalVarDeclarationAccess().getGroup()); }
		(rule__ExternalVarDeclaration__Group__0)
		{ after(grammarAccess.getExternalVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVarInitDeclaration
entryRuleGlobalVarInitDeclaration
:
{ before(grammarAccess.getGlobalVarInitDeclarationRule()); }
	 ruleGlobalVarInitDeclaration
{ after(grammarAccess.getGlobalVarInitDeclarationRule()); } 
	 EOF 
;

// Rule GlobalVarInitDeclaration
ruleGlobalVarInitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getGroup()); }
		(rule__GlobalVarInitDeclaration__Group__0)
		{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalVarDeclaration
entryRuleGlobalVarDeclaration
:
{ before(grammarAccess.getGlobalVarDeclarationRule()); }
	 ruleGlobalVarDeclaration
{ after(grammarAccess.getGlobalVarDeclarationRule()); } 
	 EOF 
;

// Rule GlobalVarDeclaration
ruleGlobalVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getGroup()); }
		(rule__GlobalVarDeclaration__Group__0)
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessVariable
entryRuleProcessVariable
:
{ before(grammarAccess.getProcessVariableRule()); }
	 ruleProcessVariable
{ after(grammarAccess.getProcessVariableRule()); } 
	 EOF 
;

// Rule ProcessVariable
ruleProcessVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessVariableAccess().getNameAssignment()); }
		(rule__ProcessVariable__NameAssignment)
		{ after(grammarAccess.getProcessVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessVarList
entryRuleProcessVarList
:
{ before(grammarAccess.getProcessVarListRule()); }
	 ruleProcessVarList
{ after(grammarAccess.getProcessVarListRule()); } 
	 EOF 
;

// Rule ProcessVarList
ruleProcessVarList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessVarListAccess().getGroup()); }
		(rule__ProcessVarList__Group__0)
		{ after(grammarAccess.getProcessVarListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessVarInitDeclaration
entryRuleProcessVarInitDeclaration
:
{ before(grammarAccess.getProcessVarInitDeclarationRule()); }
	 ruleProcessVarInitDeclaration
{ after(grammarAccess.getProcessVarInitDeclarationRule()); } 
	 EOF 
;

// Rule ProcessVarInitDeclaration
ruleProcessVarInitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessVarInitDeclarationAccess().getGroup()); }
		(rule__ProcessVarInitDeclaration__Group__0)
		{ after(grammarAccess.getProcessVarInitDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessVarDeclaration
entryRuleProcessVarDeclaration
:
{ before(grammarAccess.getProcessVarDeclarationRule()); }
	 ruleProcessVarDeclaration
{ after(grammarAccess.getProcessVarDeclarationRule()); } 
	 EOF 
;

// Rule ProcessVarDeclaration
ruleProcessVarDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessVarDeclarationAccess().getGroup()); }
		(rule__ProcessVarDeclaration__Group__0)
		{ after(grammarAccess.getProcessVarDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayVariable
entryRuleArrayVariable
:
{ before(grammarAccess.getArrayVariableRule()); }
	 ruleArrayVariable
{ after(grammarAccess.getArrayVariableRule()); } 
	 EOF 
;

// Rule ArrayVariable
ruleArrayVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayVariableAccess().getGroup()); }
		(rule__ArrayVariable__Group__0)
		{ after(grammarAccess.getArrayVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArraySpecificationInit
entryRuleArraySpecificationInit
:
{ before(grammarAccess.getArraySpecificationInitRule()); }
	 ruleArraySpecificationInit
{ after(grammarAccess.getArraySpecificationInitRule()); } 
	 EOF 
;

// Rule ArraySpecificationInit
ruleArraySpecificationInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraySpecificationInitAccess().getGroup()); }
		(rule__ArraySpecificationInit__Group__0)
		{ after(grammarAccess.getArraySpecificationInitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArraySpecification
entryRuleArraySpecification
:
{ before(grammarAccess.getArraySpecificationRule()); }
	 ruleArraySpecification
{ after(grammarAccess.getArraySpecificationRule()); } 
	 EOF 
;

// Rule ArraySpecification
ruleArraySpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArraySpecificationAccess().getGroup()); }
		(rule__ArraySpecification__Group__0)
		{ after(grammarAccess.getArraySpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayInterval
entryRuleArrayInterval
:
{ before(grammarAccess.getArrayIntervalRule()); }
	 ruleArrayInterval
{ after(grammarAccess.getArrayIntervalRule()); } 
	 EOF 
;

// Rule ArrayInterval
ruleArrayInterval 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayIntervalAccess().getGroup()); }
		(rule__ArrayInterval__Group__0)
		{ after(grammarAccess.getArrayIntervalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayInitialization
entryRuleArrayInitialization
:
{ before(grammarAccess.getArrayInitializationRule()); }
	 ruleArrayInitialization
{ after(grammarAccess.getArrayInitializationRule()); } 
	 EOF 
;

// Rule ArrayInitialization
ruleArrayInitialization 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayInitializationAccess().getGroup()); }
		(rule__ArrayInitialization__Group__0)
		{ after(grammarAccess.getArrayInitializationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getGroup()); }
		(rule__TimeLiteral__Group__0)
		{ after(grammarAccess.getTimeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataTypeName
entryRuleDataTypeName
:
{ before(grammarAccess.getDataTypeNameRule()); }
	 ruleDataTypeName
{ after(grammarAccess.getDataTypeNameRule()); } 
	 EOF 
;

// Rule DataTypeName
ruleDataTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeNameAccess().getAlternatives()); }
		(rule__DataTypeName__Alternatives)
		{ after(grammarAccess.getDataTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericTypeName
entryRuleNumericTypeName
:
{ before(grammarAccess.getNumericTypeNameRule()); }
	 ruleNumericTypeName
{ after(grammarAccess.getNumericTypeNameRule()); } 
	 EOF 
;

// Rule NumericTypeName
ruleNumericTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeNameAccess().getAlternatives()); }
		(rule__NumericTypeName__Alternatives)
		{ after(grammarAccess.getNumericTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerTypeName
entryRuleIntegerTypeName
:
{ before(grammarAccess.getIntegerTypeNameRule()); }
	 ruleIntegerTypeName
{ after(grammarAccess.getIntegerTypeNameRule()); } 
	 EOF 
;

// Rule IntegerTypeName
ruleIntegerTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerTypeNameAccess().getAlternatives()); }
		(rule__IntegerTypeName__Alternatives)
		{ after(grammarAccess.getIntegerTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedInteger
entryRuleSignedInteger
:
{ before(grammarAccess.getSignedIntegerRule()); }
	 ruleSignedInteger
{ after(grammarAccess.getSignedIntegerRule()); } 
	 EOF 
;

// Rule SignedInteger
ruleSignedInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedIntegerAccess().getGroup()); }
		(rule__SignedInteger__Group__0)
		{ after(grammarAccess.getSignedIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
		(rule__NumericLiteral__Alternatives)
		{ after(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
		(rule__IntegerLiteral__Group__0)
		{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
		(rule__RealLiteral__Group__0)
		{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AssignmentType
ruleAssignmentType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getAlternatives()); }
		(rule__AssignmentType__Alternatives)
		{ after(grammarAccess.getAssignmentTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompOperator
ruleCompOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getAlternatives()); }
		(rule__CompOperator__Alternatives)
		{ after(grammarAccess.getCompOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule EquOperator
ruleEquOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquOperatorAccess().getAlternatives()); }
		(rule__EquOperator__Alternatives)
		{ after(grammarAccess.getEquOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule AddOperator
ruleAddOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOperatorAccess().getAlternatives()); }
		(rule__AddOperator__Alternatives)
		{ after(grammarAccess.getAddOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule MulOperator
ruleMulOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOperatorAccess().getAlternatives()); }
		(rule__MulOperator__Alternatives)
		{ after(grammarAccess.getMulOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule UnaryOperator
ruleUnaryOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
		(rule__UnaryOperator__Alternatives)
		{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getConfGlobVarsAssignment_2_0()); }
		(rule__Configuration__ConfGlobVarsAssignment_2_0)
		{ after(grammarAccess.getConfigurationAccess().getConfGlobVarsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getConfigurationAccess().getResourcesAssignment_2_1()); }
		(rule__Configuration__ResourcesAssignment_2_1)
		{ after(grammarAccess.getConfigurationAccess().getResourcesAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleResourceAccess().getGroup_1_0()); }
		(rule__SingleResource__Group_1_0__0)
		{ after(grammarAccess.getSingleResourceAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleResourceAccess().getGroup_1_1()); }
		(rule__SingleResource__Group_1_1__0)
		{ after(grammarAccess.getSingleResourceAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskInitializationAccess().getGroup_0()); }
		(rule__TaskInitialization__Group_0__0)
		{ after(grammarAccess.getTaskInitializationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskInitializationAccess().getGroup_1()); }
		(rule__TaskInitialization__Group_1__0)
		{ after(grammarAccess.getTaskInitializationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfElementAccess().getAttachVariableConfElementParserRuleCall_0()); }
		ruleAttachVariableConfElement
		{ after(grammarAccess.getProgramConfElementAccess().getAttachVariableConfElementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramConfElementAccess().getTemplateProcessConfElementParserRuleCall_1()); }
		ruleTemplateProcessConfElement
		{ after(grammarAccess.getProgramConfElementAccess().getTemplateProcessConfElementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getAttVarAssignment_2_0()); }
		(rule__AttachVariableConfElement__AttVarAssignment_2_0)
		{ after(grammarAccess.getAttachVariableConfElementAccess().getAttVarAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getConstAssignment_2_1()); }
		(rule__AttachVariableConfElement__ConstAssignment_2_1)
		{ after(grammarAccess.getAttachVariableConfElementAccess().getConstAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarAssignment_2_0()); }
		(rule__TemplateProcessAttachVariableConfElement__AttVarAssignment_2_0)
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getConstAssignment_2_1()); }
		(rule__TemplateProcessAttachVariableConfElement__ConstAssignment_2_1)
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getConstAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgInVarsAssignment_2_0()); }
		(rule__Program__ProgInVarsAssignment_2_0)
		{ after(grammarAccess.getProgramAccess().getProgInVarsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProgOutVarsAssignment_2_1()); }
		(rule__Program__ProgOutVarsAssignment_2_1)
		{ after(grammarAccess.getProgramAccess().getProgOutVarsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProgInOutVarsAssignment_2_2()); }
		(rule__Program__ProgInOutVarsAssignment_2_2)
		{ after(grammarAccess.getProgramAccess().getProgInOutVarsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProgVarsAssignment_2_3()); }
		(rule__Program__ProgVarsAssignment_2_3)
		{ after(grammarAccess.getProgramAccess().getProgVarsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProgTempVarsAssignment_2_4()); }
		(rule__Program__ProgTempVarsAssignment_2_4)
		{ after(grammarAccess.getProgramAccess().getProgTempVarsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getProgExternVarsAssignment_2_5()); }
		(rule__Program__ProgExternVarsAssignment_2_5)
		{ after(grammarAccess.getProgramAccess().getProgExternVarsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbInVarsAssignment_2_0()); }
		(rule__FunctionBlock__FbInVarsAssignment_2_0)
		{ after(grammarAccess.getFunctionBlockAccess().getFbInVarsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbOutVarsAssignment_2_1()); }
		(rule__FunctionBlock__FbOutVarsAssignment_2_1)
		{ after(grammarAccess.getFunctionBlockAccess().getFbOutVarsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbInOutVarsAssignment_2_2()); }
		(rule__FunctionBlock__FbInOutVarsAssignment_2_2)
		{ after(grammarAccess.getFunctionBlockAccess().getFbInOutVarsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbVarsAssignment_2_3()); }
		(rule__FunctionBlock__FbVarsAssignment_2_3)
		{ after(grammarAccess.getFunctionBlockAccess().getFbVarsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbTempVarsAssignment_2_4()); }
		(rule__FunctionBlock__FbTempVarsAssignment_2_4)
		{ after(grammarAccess.getFunctionBlockAccess().getFbTempVarsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbExternVarsAssignment_2_5()); }
		(rule__FunctionBlock__FbExternVarsAssignment_2_5)
		{ after(grammarAccess.getFunctionBlockAccess().getFbExternVarsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunInVarsAssignment_4_0()); }
		(rule__Function__FunInVarsAssignment_4_0)
		{ after(grammarAccess.getFunctionAccess().getFunInVarsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getFunOutVarsAssignment_4_1()); }
		(rule__Function__FunOutVarsAssignment_4_1)
		{ after(grammarAccess.getFunctionAccess().getFunOutVarsAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getFunInOutVarsAssignment_4_2()); }
		(rule__Function__FunInOutVarsAssignment_4_2)
		{ after(grammarAccess.getFunctionAccess().getFunInOutVarsAssignment_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getFunVarsAssignment_4_3()); }
		(rule__Function__FunVarsAssignment_4_3)
		{ after(grammarAccess.getFunctionAccess().getFunVarsAssignment_4_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcInVarsAssignment_2_0()); }
		(rule__Process__ProcInVarsAssignment_2_0)
		{ after(grammarAccess.getProcessAccess().getProcInVarsAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getProcOutVarsAssignment_2_1()); }
		(rule__Process__ProcOutVarsAssignment_2_1)
		{ after(grammarAccess.getProcessAccess().getProcOutVarsAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getProcInOutVarsAssignment_2_2()); }
		(rule__Process__ProcInOutVarsAssignment_2_2)
		{ after(grammarAccess.getProcessAccess().getProcInOutVarsAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getProcProcessVarsAssignment_2_3()); }
		(rule__Process__ProcProcessVarsAssignment_2_3)
		{ after(grammarAccess.getProcessAccess().getProcProcessVarsAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getProcVarsAssignment_2_4()); }
		(rule__Process__ProcVarsAssignment_2_4)
		{ after(grammarAccess.getProcessAccess().getProcVarsAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getProcessAccess().getProcTempVarsAssignment_2_5()); }
		(rule__Process__ProcTempVarsAssignment_2_5)
		{ after(grammarAccess.getProcessAccess().getProcTempVarsAssignment_2_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatementAccess().getGroup_2_0()); }
		(rule__SetStateStatement__Group_2_0__0)
		{ after(grammarAccess.getSetStateStatementAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSetStateStatementAccess().getNextAssignment_2_1()); }
		(rule__SetStateStatement__NextAssignment_2_1)
		{ after(grammarAccess.getSetStateStatementAccess().getNextAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatements__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatementsAccess().getStartProcessStatementParserRuleCall_0()); }
		ruleStartProcessStatement
		{ after(grammarAccess.getProcessStatementsAccess().getStartProcessStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementsAccess().getStopProcessStatementParserRuleCall_1()); }
		ruleStopProcessStatement
		{ after(grammarAccess.getProcessStatementsAccess().getStopProcessStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatementsAccess().getErrorProcessStatementParserRuleCall_2()); }
		ruleErrorProcessStatement
		{ after(grammarAccess.getProcessStatementsAccess().getErrorProcessStatementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getActiveAssignment_4_0()); }
		(rule__ProcessStatusExpression__ActiveAssignment_4_0)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getActiveAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getInactiveAssignment_4_1()); }
		(rule__ProcessStatusExpression__InactiveAssignment_4_1)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getInactiveAssignment_4_1()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getStopAssignment_4_2()); }
		(rule__ProcessStatusExpression__StopAssignment_4_2)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getStopAssignment_4_2()); }
	)
	|
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getErrorAssignment_4_3()); }
		(rule__ProcessStatusExpression__ErrorAssignment_4_3)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getErrorAssignment_4_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartProcessStatementAccess().getGroup_0()); }
		(rule__StartProcessStatement__Group_0__0)
		{ after(grammarAccess.getStartProcessStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStartProcessStatementAccess().getGroup_1()); }
		(rule__StartProcessStatement__Group_1__0)
		{ after(grammarAccess.getStartProcessStatementAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getConstAssignment_1_0()); }
		(rule__TimeoutStatement__ConstAssignment_1_0)
		{ after(grammarAccess.getTimeoutStatementAccess().getConstAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getVariableAssignment_1_1()); }
		(rule__TimeoutStatement__VariableAssignment_1_1)
		{ after(grammarAccess.getTimeoutStatementAccess().getVariableAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
		(rule__UnaryExpression__Group_1__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstAssignment_0()); }
		(rule__PrimaryExpression__ConstAssignment_0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1()); }
		(rule__PrimaryExpression__VariableAssignment_1)
		{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getArrayAssignment_2()); }
		(rule__PrimaryExpression__ArrayAssignment_2)
		{ after(grammarAccess.getPrimaryExpressionAccess().getArrayAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getProcStatusAssignment_3()); }
		(rule__PrimaryExpression__ProcStatusAssignment_3)
		{ after(grammarAccess.getPrimaryExpressionAccess().getProcStatusAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFunCallAssignment_4()); }
		(rule__PrimaryExpression__FunCallAssignment_4)
		{ after(grammarAccess.getPrimaryExpressionAccess().getFunCallAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
		(rule__PrimaryExpression__Group_5__0)
		{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_1()); }
		ruleSelectionStatement
		{ after(grammarAccess.getStatementAccess().getSelectionStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIterationStatementParserRuleCall_2()); }
		ruleIterationStatement
		{ after(grammarAccess.getStatementAccess().getIterationStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_3()); }
		(rule__Statement__Group_3__0)
		{ after(grammarAccess.getStatementAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_4()); }
		(rule__Statement__Group_4__0)
		{ after(grammarAccess.getStatementAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_5()); }
		(rule__Statement__Group_5__0)
		{ after(grammarAccess.getStatementAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_6()); }
		(rule__Statement__Group_6__0)
		{ after(grammarAccess.getStatementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_7()); }
		(rule__Statement__Group_7__0)
		{ after(grammarAccess.getStatementAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_8()); }
		(rule__Statement__Group_8__0)
		{ after(grammarAccess.getStatementAccess().getGroup_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getVariableAssignment_0_0()); }
		(rule__AssignmentStatement__VariableAssignment_0_0)
		{ after(grammarAccess.getAssignmentStatementAccess().getVariableAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getArrayAssignment_0_1()); }
		(rule__AssignmentStatement__ArrayAssignment_0_1)
		{ after(grammarAccess.getAssignmentStatementAccess().getArrayAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectionStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
		ruleIfStatement
		{ after(grammarAccess.getSelectionStatementAccess().getIfStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectionStatementAccess().getCaseStatementParserRuleCall_1()); }
		ruleCaseStatement
		{ after(grammarAccess.getSelectionStatementAccess().getCaseStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseListElementAccess().getNumAssignment_0()); }
		(rule__CaseListElement__NumAssignment_0)
		{ after(grammarAccess.getCaseListElementAccess().getNumAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCaseListElementAccess().getVariableAssignment_1()); }
		(rule__CaseListElement__VariableAssignment_1)
		{ after(grammarAccess.getCaseListElementAccess().getVariableAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_0()); }
		ruleForStatement
		{ after(grammarAccess.getIterationStatementAccess().getForStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); }
		ruleWhileStatement
		{ after(grammarAccess.getIterationStatementAccess().getWhileStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIterationStatementAccess().getRepeatStatementParserRuleCall_2()); }
		ruleRepeatStatement
		{ after(grammarAccess.getIterationStatementAccess().getRepeatStatementParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getSpecAssignment_2_0()); }
		(rule__VarInitDeclaration__SpecAssignment_2_0)
		{ after(grammarAccess.getVarInitDeclarationAccess().getSpecAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getArrSpecAssignment_2_1()); }
		(rule__VarInitDeclaration__ArrSpecAssignment_2_1)
		{ after(grammarAccess.getVarInitDeclarationAccess().getArrSpecAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getFbAssignment_2_2()); }
		(rule__VarInitDeclaration__FbAssignment_2_2)
		{ after(grammarAccess.getVarInitDeclarationAccess().getFbAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getGroup_3_0()); }
		(rule__GlobalVarDeclaration__Group_3_0__0)
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getGroup_3_1()); }
		(rule__GlobalVarDeclaration__Group_3_1__0)
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySpecificationAccess().getIntervalAssignment_2_0()); }
		(rule__ArraySpecification__IntervalAssignment_2_0)
		{ after(grammarAccess.getArraySpecificationAccess().getIntervalAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getArraySpecificationAccess().getAsteriskKeyword_2_1()); }
		'*'
		{ after(grammarAccess.getArraySpecificationAccess().getAsteriskKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeNameAccess().getNumericTypeNameParserRuleCall_0()); }
		ruleNumericTypeName
		{ after(grammarAccess.getDataTypeNameAccess().getNumericTypeNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeNameAccess().getBIT_STRING_TYPE_NAMETerminalRuleCall_1()); }
		RULE_BIT_STRING_TYPE_NAME
		{ after(grammarAccess.getDataTypeNameAccess().getBIT_STRING_TYPE_NAMETerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeNameAccess().getTIME_TYPE_NAMETerminalRuleCall_2()); }
		RULE_TIME_TYPE_NAME
		{ after(grammarAccess.getDataTypeNameAccess().getTIME_TYPE_NAMETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeNameAccess().getSTRING_TYPE_NAMETerminalRuleCall_3()); }
		RULE_STRING_TYPE_NAME
		{ after(grammarAccess.getDataTypeNameAccess().getSTRING_TYPE_NAMETerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeNameAccess().getIntegerTypeNameParserRuleCall_0()); }
		ruleIntegerTypeName
		{ after(grammarAccess.getNumericTypeNameAccess().getIntegerTypeNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeNameAccess().getREAL_TYPE_NAMETerminalRuleCall_1()); }
		RULE_REAL_TYPE_NAME
		{ after(grammarAccess.getNumericTypeNameAccess().getREAL_TYPE_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerTypeNameAccess().getSIGNED_INTEGER_TYPE_NAMETerminalRuleCall_0()); }
		RULE_SIGNED_INTEGER_TYPE_NAME
		{ after(grammarAccess.getIntegerTypeNameAccess().getSIGNED_INTEGER_TYPE_NAMETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerTypeNameAccess().getUNSIGNED_INTEGER_TYPE_NAMETerminalRuleCall_1()); }
		RULE_UNSIGNED_INTEGER_TYPE_NAME
		{ after(grammarAccess.getIntegerTypeNameAccess().getUNSIGNED_INTEGER_TYPE_NAMETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumAssignment_0()); }
		(rule__Constant__NumAssignment_0)
		{ after(grammarAccess.getConstantAccess().getNumAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getTimeAssignment_1()); }
		(rule__Constant__TimeAssignment_1)
		{ after(grammarAccess.getConstantAccess().getTimeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getOthAssignment_2()); }
		(rule__Constant__OthAssignment_2)
		{ after(grammarAccess.getConstantAccess().getOthAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__OthAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getOthBINARY_INTEGERTerminalRuleCall_2_0_0()); }
		RULE_BINARY_INTEGER
		{ after(grammarAccess.getConstantAccess().getOthBINARY_INTEGERTerminalRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getOthOCTAL_INTEGERTerminalRuleCall_2_0_1()); }
		RULE_OCTAL_INTEGER
		{ after(grammarAccess.getConstantAccess().getOthOCTAL_INTEGERTerminalRuleCall_2_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getOthHEX_INTEGERTerminalRuleCall_2_0_2()); }
		RULE_HEX_INTEGER
		{ after(grammarAccess.getConstantAccess().getOthHEX_INTEGERTerminalRuleCall_2_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getOthBOOLEAN_LITERALTerminalRuleCall_2_0_3()); }
		RULE_BOOLEAN_LITERAL
		{ after(grammarAccess.getConstantAccess().getOthBOOLEAN_LITERALTerminalRuleCall_2_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_1()); }
		ruleRealLiteral
		{ after(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getInEnumLiteralDeclaration_0()); }
		(':=')
		{ after(grammarAccess.getAssignmentTypeAccess().getInEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentTypeAccess().getOutEnumLiteralDeclaration_1()); }
		('=>')
		{ after(grammarAccess.getAssignmentTypeAccess().getOutEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
		('=')
		{ after(grammarAccess.getCompOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
		('<>')
		{ after(grammarAccess.getCompOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
		('<')
		{ after(grammarAccess.getEquOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getEquOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getEquOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getEquOperatorAccess().getLESS_EQUEnumLiteralDeclaration_2()); }
		('<=')
		{ after(grammarAccess.getEquOperatorAccess().getLESS_EQUEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getEquOperatorAccess().getGREATER_EQUEnumLiteralDeclaration_3()); }
		('>=')
		{ after(grammarAccess.getEquOperatorAccess().getGREATER_EQUEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
		('+')
		{ after(grammarAccess.getAddOperatorAccess().getPLUSEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getAddOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getAddOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulOperatorAccess().getMULEnumLiteralDeclaration_0()); }
		('*')
		{ after(grammarAccess.getMulOperatorAccess().getMULEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMulOperatorAccess().getDIVEnumLiteralDeclaration_1()); }
		('/')
		{ after(grammarAccess.getMulOperatorAccess().getDIVEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getMulOperatorAccess().getMODEnumLiteralDeclaration_2()); }
		('MOD')
		{ after(grammarAccess.getMulOperatorAccess().getMODEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_0()); }
		('NOT')
		{ after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnaryOperatorAccess().getUNMINUSEnumLiteralDeclaration_1()); }
		('-')
		{ after(grammarAccess.getUnaryOperatorAccess().getUNMINUSEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__0__Impl
	rule__Configuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getCONFIGURATIONKeyword_0()); }
	'CONFIGURATION'
	{ after(grammarAccess.getConfigurationAccess().getCONFIGURATIONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__1__Impl
	rule__Configuration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getNameAssignment_1()); }
	(rule__Configuration__NameAssignment_1)
	{ after(grammarAccess.getConfigurationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__2__Impl
	rule__Configuration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getAlternatives_2()); }
	(rule__Configuration__Alternatives_2)*
	{ after(grammarAccess.getConfigurationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getEND_CONFIGURATIONKeyword_3()); }
	'END_CONFIGURATION'
	{ after(grammarAccess.getConfigurationAccess().getEND_CONFIGURATIONKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Resource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__0__Impl
	rule__Resource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getRESOURCEKeyword_0()); }
	'RESOURCE'
	{ after(grammarAccess.getResourceAccess().getRESOURCEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__1__Impl
	rule__Resource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getNameAssignment_1()); }
	(rule__Resource__NameAssignment_1)
	{ after(grammarAccess.getResourceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__2__Impl
	rule__Resource__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getONKeyword_2()); }
	'ON'
	{ after(grammarAccess.getResourceAccess().getONKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__3__Impl
	rule__Resource__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getTypeAssignment_3()); }
	(rule__Resource__TypeAssignment_3)
	{ after(grammarAccess.getResourceAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__4__Impl
	rule__Resource__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getResGlobVarsAssignment_4()); }
	(rule__Resource__ResGlobVarsAssignment_4)*
	{ after(grammarAccess.getResourceAccess().getResGlobVarsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__5__Impl
	rule__Resource__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getResStatementAssignment_5()); }
	(rule__Resource__ResStatementAssignment_5)
	{ after(grammarAccess.getResourceAccess().getResStatementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Resource__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResourceAccess().getEND_RESOURCEKeyword_6()); }
	'END_RESOURCE'
	{ after(grammarAccess.getResourceAccess().getEND_RESOURCEKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group__0__Impl
	rule__SingleResource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getSingleResourceAction_0()); }
	()
	{ after(grammarAccess.getSingleResourceAccess().getSingleResourceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getAlternatives_1()); }
	(rule__SingleResource__Alternatives_1)*
	{ after(grammarAccess.getSingleResourceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResource__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group_1_0__0__Impl
	rule__SingleResource__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getTasksAssignment_1_0_0()); }
	(rule__SingleResource__TasksAssignment_1_0_0)
	{ after(grammarAccess.getSingleResourceAccess().getTasksAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getSemicolonKeyword_1_0_1()); }
	';'
	{ after(grammarAccess.getSingleResourceAccess().getSemicolonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SingleResource__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group_1_1__0__Impl
	rule__SingleResource__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getProgramConfsAssignment_1_1_0()); }
	(rule__SingleResource__ProgramConfsAssignment_1_1_0)
	{ after(grammarAccess.getSingleResourceAccess().getProgramConfsAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SingleResource__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSingleResourceAccess().getSemicolonKeyword_1_1_1()); }
	';'
	{ after(grammarAccess.getSingleResourceAccess().getSemicolonKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTASKKeyword_0()); }
	'TASK'
	{ after(grammarAccess.getTaskAccess().getTASKKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
	(rule__Task__NameAssignment_1)
	{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getInitAssignment_3()); }
	(rule__Task__InitAssignment_3)
	{ after(grammarAccess.getTaskAccess().getInitAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_0__0__Impl
	rule__TaskInitialization__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getSINGLE_DECLARATIONTerminalRuleCall_0_0()); }
	RULE_SINGLE_DECLARATION
	{ after(grammarAccess.getTaskInitializationAccess().getSINGLE_DECLARATIONTerminalRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_0__1__Impl
	rule__TaskInitialization__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_0_1()); }
	':='
	{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getSingleAssignment_0_2()); }
	(rule__TaskInitialization__SingleAssignment_0_2)
	{ after(grammarAccess.getTaskInitializationAccess().getSingleAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1__0__Impl
	rule__TaskInitialization__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getGroup_1_0()); }
	(rule__TaskInitialization__Group_1_0__0)
	{ after(grammarAccess.getTaskInitializationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1__1__Impl
	rule__TaskInitialization__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getCommaKeyword_1_1()); }
	','
	{ after(grammarAccess.getTaskInitializationAccess().getCommaKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1__2__Impl
	rule__TaskInitialization__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getPRIORITY_DECLARATIONTerminalRuleCall_1_2()); }
	RULE_PRIORITY_DECLARATION
	{ after(grammarAccess.getTaskInitializationAccess().getPRIORITY_DECLARATIONTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1__3__Impl
	rule__TaskInitialization__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_3()); }
	':='
	{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getPriorityAssignment_1_4()); }
	(rule__TaskInitialization__PriorityAssignment_1_4)
	{ after(grammarAccess.getTaskInitializationAccess().getPriorityAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TaskInitialization__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1_0__0__Impl
	rule__TaskInitialization__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getINTERVAL_DECLARATIONTerminalRuleCall_1_0_0()); }
	RULE_INTERVAL_DECLARATION
	{ after(grammarAccess.getTaskInitializationAccess().getINTERVAL_DECLARATIONTerminalRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1_0__1__Impl
	rule__TaskInitialization__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_0_1()); }
	':='
	{ after(grammarAccess.getTaskInitializationAccess().getColonEqualsSignKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TaskInitialization__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskInitializationAccess().getIntervalAssignment_1_0_2()); }
	(rule__TaskInitialization__IntervalAssignment_1_0_2)
	{ after(grammarAccess.getTaskInitializationAccess().getIntervalAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__0__Impl
	rule__ProgramConfiguration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getPROGRAMKeyword_0()); }
	'PROGRAM'
	{ after(grammarAccess.getProgramConfigurationAccess().getPROGRAMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__1__Impl
	rule__ProgramConfiguration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getNameAssignment_1()); }
	(rule__ProgramConfiguration__NameAssignment_1)
	{ after(grammarAccess.getProgramConfigurationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__2__Impl
	rule__ProgramConfiguration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getGroup_2()); }
	(rule__ProgramConfiguration__Group_2__0)?
	{ after(grammarAccess.getProgramConfigurationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__3__Impl
	rule__ProgramConfiguration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getProgramConfigurationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__4__Impl
	rule__ProgramConfiguration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getProgramAssignment_4()); }
	(rule__ProgramConfiguration__ProgramAssignment_4)
	{ after(grammarAccess.getProgramConfigurationAccess().getProgramAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getGroup_5()); }
	(rule__ProgramConfiguration__Group_5__0)?
	{ after(grammarAccess.getProgramConfigurationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group_2__0__Impl
	rule__ProgramConfiguration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getWITHKeyword_2_0()); }
	'WITH'
	{ after(grammarAccess.getProgramConfigurationAccess().getWITHKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getTaskAssignment_2_1()); }
	(rule__ProgramConfiguration__TaskAssignment_2_1)
	{ after(grammarAccess.getProgramConfigurationAccess().getTaskAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfiguration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group_5__0__Impl
	rule__ProgramConfiguration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getProgramConfigurationAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group_5__1__Impl
	rule__ProgramConfiguration__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getArgsAssignment_5_1()); }
	(rule__ProgramConfiguration__ArgsAssignment_5_1)
	{ after(grammarAccess.getProgramConfigurationAccess().getArgsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfiguration__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfigurationAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getProgramConfigurationAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfElements__Group__0__Impl
	rule__ProgramConfElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfElementsAccess().getElementsAssignment_0()); }
	(rule__ProgramConfElements__ElementsAssignment_0)
	{ after(grammarAccess.getProgramConfElementsAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfElementsAccess().getGroup_1()); }
	(rule__ProgramConfElements__Group_1__0)*
	{ after(grammarAccess.getProgramConfElementsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProgramConfElements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfElements__Group_1__0__Impl
	rule__ProgramConfElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfElementsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getProgramConfElementsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProgramConfElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramConfElementsAccess().getElementsAssignment_1_1()); }
	(rule__ProgramConfElements__ElementsAssignment_1_1)
	{ after(grammarAccess.getProgramConfElementsAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AttachVariableConfElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttachVariableConfElement__Group__0__Impl
	rule__AttachVariableConfElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttachVariableConfElementAccess().getProgramVarAssignment_0()); }
	(rule__AttachVariableConfElement__ProgramVarAssignment_0)
	{ after(grammarAccess.getAttachVariableConfElementAccess().getProgramVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttachVariableConfElement__Group__1__Impl
	rule__AttachVariableConfElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttachVariableConfElementAccess().getAssigAssignment_1()); }
	(rule__AttachVariableConfElement__AssigAssignment_1)
	{ after(grammarAccess.getAttachVariableConfElementAccess().getAssigAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AttachVariableConfElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttachVariableConfElementAccess().getAlternatives_2()); }
	(rule__AttachVariableConfElement__Alternatives_2)
	{ after(grammarAccess.getAttachVariableConfElementAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateProcessConfElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__0__Impl
	rule__TemplateProcessConfElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getPROCESSKeyword_0()); }
	'PROCESS'
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getPROCESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__1__Impl
	rule__TemplateProcessConfElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getActiveAssignment_1()); }
	(rule__TemplateProcessConfElement__ActiveAssignment_1)?
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getActiveAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__2__Impl
	rule__TemplateProcessConfElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getNameAssignment_2()); }
	(rule__TemplateProcessConfElement__NameAssignment_2)
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__3__Impl
	rule__TemplateProcessConfElement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__4__Impl
	rule__TemplateProcessConfElement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getProcessAssignment_4()); }
	(rule__TemplateProcessConfElement__ProcessAssignment_4)
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getProcessAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getGroup_5()); }
	(rule__TemplateProcessConfElement__Group_5__0)?
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateProcessConfElement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group_5__0__Impl
	rule__TemplateProcessConfElement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group_5__1__Impl
	rule__TemplateProcessConfElement__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getArgsAssignment_5_1()); }
	(rule__TemplateProcessConfElement__ArgsAssignment_5_1)
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getArgsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessConfElement__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessConfElementAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getTemplateProcessConfElementAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateProcessElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessElements__Group__0__Impl
	rule__TemplateProcessElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessElementsAccess().getElementsAssignment_0()); }
	(rule__TemplateProcessElements__ElementsAssignment_0)
	{ after(grammarAccess.getTemplateProcessElementsAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessElementsAccess().getGroup_1()); }
	(rule__TemplateProcessElements__Group_1__0)*
	{ after(grammarAccess.getTemplateProcessElementsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateProcessElements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessElements__Group_1__0__Impl
	rule__TemplateProcessElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessElementsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getTemplateProcessElementsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessElementsAccess().getElementsAssignment_1_1()); }
	(rule__TemplateProcessElements__ElementsAssignment_1_1)
	{ after(grammarAccess.getTemplateProcessElementsAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateProcessAttachVariableConfElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessAttachVariableConfElement__Group__0__Impl
	rule__TemplateProcessAttachVariableConfElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarAssignment_0()); }
	(rule__TemplateProcessAttachVariableConfElement__ProgramVarAssignment_0)
	{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessAttachVariableConfElement__Group__1__Impl
	rule__TemplateProcessAttachVariableConfElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAssigAssignment_1()); }
	(rule__TemplateProcessAttachVariableConfElement__AssigAssignment_1)
	{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAssigAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TemplateProcessAttachVariableConfElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAlternatives_2()); }
	(rule__TemplateProcessAttachVariableConfElement__Alternatives_2)
	{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getPROGRAMKeyword_0()); }
	'PROGRAM'
	{ after(grammarAccess.getProgramAccess().getPROGRAMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_1()); }
	(rule__Program__NameAssignment_1)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getAlternatives_2()); }
	(rule__Program__Alternatives_2)*
	{ after(grammarAccess.getProgramAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProcessesAssignment_3()); }
	(rule__Program__ProcessesAssignment_3)*
	{ after(grammarAccess.getProgramAccess().getProcessesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getEND_PROGRAMKeyword_4()); }
	'END_PROGRAM'
	{ after(grammarAccess.getProgramAccess().getEND_PROGRAMKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionBlock__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBlock__Group__0__Impl
	rule__FunctionBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBlockAccess().getFUNCTION_BLOCKKeyword_0()); }
	'FUNCTION_BLOCK'
	{ after(grammarAccess.getFunctionBlockAccess().getFUNCTION_BLOCKKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBlock__Group__1__Impl
	rule__FunctionBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBlockAccess().getNameAssignment_1()); }
	(rule__FunctionBlock__NameAssignment_1)
	{ after(grammarAccess.getFunctionBlockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBlock__Group__2__Impl
	rule__FunctionBlock__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBlockAccess().getAlternatives_2()); }
	(rule__FunctionBlock__Alternatives_2)*
	{ after(grammarAccess.getFunctionBlockAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBlock__Group__3__Impl
	rule__FunctionBlock__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBlockAccess().getProcessesAssignment_3()); }
	(rule__FunctionBlock__ProcessesAssignment_3)*
	{ after(grammarAccess.getFunctionBlockAccess().getProcessesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionBlock__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionBlockAccess().getEND_FUNCTION_BLOCKKeyword_4()); }
	'END_FUNCTION_BLOCK'
	{ after(grammarAccess.getFunctionBlockAccess().getEND_FUNCTION_BLOCKKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0()); }
	'FUNCTION'
	{ after(grammarAccess.getFunctionAccess().getFUNCTIONKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypeAssignment_3()); }
	(rule__Function__TypeAssignment_3)
	{ after(grammarAccess.getFunctionAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getAlternatives_4()); }
	(rule__Function__Alternatives_4)*
	{ after(grammarAccess.getFunctionAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getStatementAssignment_5()); }
	(rule__Function__StatementAssignment_5)
	{ after(grammarAccess.getFunctionAccess().getStatementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getEND_FUNCTIONKeyword_6()); }
	'END_FUNCTION'
	{ after(grammarAccess.getFunctionAccess().getEND_FUNCTIONKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getPROCESSKeyword_0()); }
	'PROCESS'
	{ after(grammarAccess.getProcessAccess().getPROCESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_1()); }
	(rule__Process__NameAssignment_1)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getAlternatives_2()); }
	(rule__Process__Alternatives_2)*
	{ after(grammarAccess.getProcessAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getStatesAssignment_3()); }
	(rule__Process__StatesAssignment_3)*
	{ after(grammarAccess.getProcessAccess().getStatesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getEND_PROCESSKeyword_4()); }
	'END_PROCESS'
	{ after(grammarAccess.getProcessAccess().getEND_PROCESSKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getSTATEKeyword_0()); }
	'STATE'
	{ after(grammarAccess.getStateAccess().getSTATEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getNameAssignment_1()); }
	(rule__State__NameAssignment_1)
	{ after(grammarAccess.getStateAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getLoopedAssignment_2()); }
	(rule__State__LoopedAssignment_2)?
	{ after(grammarAccess.getStateAccess().getLoopedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getStatementAssignment_3()); }
	(rule__State__StatementAssignment_3)
	{ after(grammarAccess.getStateAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getTimeoutAssignment_4()); }
	(rule__State__TimeoutAssignment_4)?
	{ after(grammarAccess.getStateAccess().getTimeoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__State__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateAccess().getEND_STATEKeyword_5()); }
	'END_STATE'
	{ after(grammarAccess.getStateAccess().getEND_STATEKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetStateStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStatement__Group__0__Impl
	rule__SetStateStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatementAccess().getSetStateStatementAction_0()); }
	()
	{ after(grammarAccess.getSetStateStatementAccess().getSetStateStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStatement__Group__1__Impl
	rule__SetStateStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatementAccess().getSETKeyword_1()); }
	'SET'
	{ after(grammarAccess.getSetStateStatementAccess().getSETKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatementAccess().getAlternatives_2()); }
	(rule__SetStateStatement__Alternatives_2)
	{ after(grammarAccess.getSetStateStatementAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SetStateStatement__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStatement__Group_2_0__0__Impl
	rule__SetStateStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatementAccess().getSTATEKeyword_2_0_0()); }
	'STATE'
	{ after(grammarAccess.getSetStateStatementAccess().getSTATEKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SetStateStatement__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSetStateStatementAccess().getStateAssignment_2_0_1()); }
	(rule__SetStateStatement__StateAssignment_2_0_1)
	{ after(grammarAccess.getSetStateStatementAccess().getStateAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessStatusExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessStatusExpression__Group__0__Impl
	rule__ProcessStatusExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessStatusExpressionAccess().getPROCESSKeyword_0()); }
	'PROCESS'
	{ after(grammarAccess.getProcessStatusExpressionAccess().getPROCESSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessStatusExpression__Group__1__Impl
	rule__ProcessStatusExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessStatusExpressionAccess().getProcessAssignment_1()); }
	(rule__ProcessStatusExpression__ProcessAssignment_1)
	{ after(grammarAccess.getProcessStatusExpressionAccess().getProcessAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessStatusExpression__Group__2__Impl
	rule__ProcessStatusExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessStatusExpressionAccess().getINKeyword_2()); }
	'IN'
	{ after(grammarAccess.getProcessStatusExpressionAccess().getINKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessStatusExpression__Group__3__Impl
	rule__ProcessStatusExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessStatusExpressionAccess().getSTATEKeyword_3()); }
	'STATE'
	{ after(grammarAccess.getProcessStatusExpressionAccess().getSTATEKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessStatusExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessStatusExpressionAccess().getAlternatives_4()); }
	(rule__ProcessStatusExpression__Alternatives_4)
	{ after(grammarAccess.getProcessStatusExpressionAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartProcessStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_0__0__Impl
	rule__StartProcessStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getStartProcessStatementAction_0_0()); }
	()
	{ after(grammarAccess.getStartProcessStatementAccess().getStartProcessStatementAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getGroup_0_1()); }
	(rule__StartProcessStatement__Group_0_1__0)
	{ after(grammarAccess.getStartProcessStatementAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartProcessStatement__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_0_1__0__Impl
	rule__StartProcessStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getSTARTKeyword_0_1_0()); }
	'START'
	{ after(grammarAccess.getStartProcessStatementAccess().getSTARTKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_0_1__1__Impl
	rule__StartProcessStatement__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getPROCESSKeyword_0_1_1()); }
	'PROCESS'
	{ after(grammarAccess.getStartProcessStatementAccess().getPROCESSKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getProcessAssignment_0_1_2()); }
	(rule__StartProcessStatement__ProcessAssignment_0_1_2)
	{ after(grammarAccess.getStartProcessStatementAccess().getProcessAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StartProcessStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_1__0__Impl
	rule__StartProcessStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getStartProcessStatementAction_1_0()); }
	()
	{ after(grammarAccess.getStartProcessStatementAccess().getStartProcessStatementAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StartProcessStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStartProcessStatementAccess().getRESTARTKeyword_1_1()); }
	'RESTART'
	{ after(grammarAccess.getStartProcessStatementAccess().getRESTARTKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopProcessStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcessStatement__Group__0__Impl
	rule__StopProcessStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcessStatementAccess().getStopProcessStatementAction_0()); }
	()
	{ after(grammarAccess.getStopProcessStatementAccess().getStopProcessStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcessStatement__Group__1__Impl
	rule__StopProcessStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcessStatementAccess().getSTOPKeyword_1()); }
	'STOP'
	{ after(grammarAccess.getStopProcessStatementAccess().getSTOPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcessStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcessStatementAccess().getGroup_2()); }
	(rule__StopProcessStatement__Group_2__0)?
	{ after(grammarAccess.getStopProcessStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StopProcessStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcessStatement__Group_2__0__Impl
	rule__StopProcessStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcessStatementAccess().getPROCESSKeyword_2_0()); }
	'PROCESS'
	{ after(grammarAccess.getStopProcessStatementAccess().getPROCESSKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StopProcessStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStopProcessStatementAccess().getProcessAssignment_2_1()); }
	(rule__StopProcessStatement__ProcessAssignment_2_1)
	{ after(grammarAccess.getStopProcessStatementAccess().getProcessAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorProcessStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorProcessStatement__Group__0__Impl
	rule__ErrorProcessStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorProcessStatementAccess().getErrorProcessStatementAction_0()); }
	()
	{ after(grammarAccess.getErrorProcessStatementAccess().getErrorProcessStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorProcessStatement__Group__1__Impl
	rule__ErrorProcessStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorProcessStatementAccess().getERRORKeyword_1()); }
	'ERROR'
	{ after(grammarAccess.getErrorProcessStatementAccess().getERRORKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorProcessStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorProcessStatementAccess().getGroup_2()); }
	(rule__ErrorProcessStatement__Group_2__0)?
	{ after(grammarAccess.getErrorProcessStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ErrorProcessStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorProcessStatement__Group_2__0__Impl
	rule__ErrorProcessStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorProcessStatementAccess().getPROCESSKeyword_2_0()); }
	'PROCESS'
	{ after(grammarAccess.getErrorProcessStatementAccess().getPROCESSKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ErrorProcessStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getErrorProcessStatementAccess().getProcessAssignment_2_1()); }
	(rule__ErrorProcessStatement__ProcessAssignment_2_1)
	{ after(grammarAccess.getErrorProcessStatementAccess().getProcessAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeoutStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutStatement__Group__0__Impl
	rule__TimeoutStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutStatementAccess().getTIMEOUTKeyword_0()); }
	'TIMEOUT'
	{ after(grammarAccess.getTimeoutStatementAccess().getTIMEOUTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutStatement__Group__1__Impl
	rule__TimeoutStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutStatementAccess().getAlternatives_1()); }
	(rule__TimeoutStatement__Alternatives_1)
	{ after(grammarAccess.getTimeoutStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutStatement__Group__2__Impl
	rule__TimeoutStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutStatementAccess().getTHENKeyword_2()); }
	'THEN'
	{ after(grammarAccess.getTimeoutStatementAccess().getTHENKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutStatement__Group__3__Impl
	rule__TimeoutStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutStatementAccess().getStatementAssignment_3()); }
	(rule__TimeoutStatement__StatementAssignment_3)
	{ after(grammarAccess.getTimeoutStatementAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeoutStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeoutStatementAccess().getEND_TIMEOUTKeyword_4()); }
	'END_TIMEOUT'
	{ after(grammarAccess.getTimeoutStatementAccess().getEND_TIMEOUTKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ResetTimerStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetTimerStatement__Group__0__Impl
	rule__ResetTimerStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetTimerStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetTimerStatementAccess().getResetTimerStatementAction_0()); }
	()
	{ after(grammarAccess.getResetTimerStatementAccess().getResetTimerStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetTimerStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetTimerStatement__Group__1__Impl
	rule__ResetTimerStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetTimerStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetTimerStatementAccess().getRESETKeyword_1()); }
	'RESET'
	{ after(grammarAccess.getResetTimerStatementAccess().getRESETKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetTimerStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ResetTimerStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResetTimerStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResetTimerStatementAccess().getTIMERKeyword_2()); }
	'TIMER'
	{ after(grammarAccess.getResetTimerStatementAccess().getTIMERKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FBInvocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FBInvocation__Group__0__Impl
	rule__FBInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFBInvocationAccess().getFbAssignment_0()); }
	(rule__FBInvocation__FbAssignment_0)
	{ after(grammarAccess.getFBInvocationAccess().getFbAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FBInvocation__Group__1__Impl
	rule__FBInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFBInvocationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFBInvocationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FBInvocation__Group__2__Impl
	rule__FBInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFBInvocationAccess().getArgsAssignment_2()); }
	(rule__FBInvocation__ArgsAssignment_2)?
	{ after(grammarAccess.getFBInvocationAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FBInvocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFBInvocationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFBInvocationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
	(rule__FunctionCall__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getArgsAssignment_2()); }
	(rule__FunctionCall__ArgsAssignment_2)?
	{ after(grammarAccess.getFunctionCallAccess().getArgsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignmentElements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignmentElements__Group__0__Impl
	rule__ParamAssignmentElements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentElementsAccess().getElementsAssignment_0()); }
	(rule__ParamAssignmentElements__ElementsAssignment_0)
	{ after(grammarAccess.getParamAssignmentElementsAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignmentElements__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentElementsAccess().getGroup_1()); }
	(rule__ParamAssignmentElements__Group_1__0)*
	{ after(grammarAccess.getParamAssignmentElementsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignmentElements__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignmentElements__Group_1__0__Impl
	rule__ParamAssignmentElements__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentElementsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParamAssignmentElementsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignmentElements__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentElementsAccess().getElementsAssignment_1_1()); }
	(rule__ParamAssignmentElements__ElementsAssignment_1_1)
	{ after(grammarAccess.getParamAssignmentElementsAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignment__Group__0__Impl
	rule__ParamAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentAccess().getVariableAssignment_0()); }
	(rule__ParamAssignment__VariableAssignment_0)
	{ after(grammarAccess.getParamAssignmentAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignment__Group__1__Impl
	rule__ParamAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentAccess().getAssigAssignment_1()); }
	(rule__ParamAssignment__AssigAssignment_1)
	{ after(grammarAccess.getParamAssignmentAccess().getAssigAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParamAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamAssignmentAccess().getValueAssignment_2()); }
	(rule__ParamAssignment__ValueAssignment_2)
	{ after(grammarAccess.getParamAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getXorExpressionParserRuleCall_0()); }
	ruleXorExpression
	{ after(grammarAccess.getExpressionAccess().getXorExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
	(rule__Expression__Group_1__0)*
	{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getOR_OPERATORTerminalRuleCall_1_1()); }
	RULE_OR_OPERATOR
	{ after(grammarAccess.getExpressionAccess().getOR_OPERATORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
	(rule__Expression__RightAssignment_1_2)
	{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__0__Impl
	rule__XorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
	{ after(grammarAccess.getXorExpressionAccess().getAndExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getGroup_1()); }
	(rule__XorExpression__Group_1__0)*
	{ after(grammarAccess.getXorExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XorExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__0__Impl
	rule__XorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getXorExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getXorExpressionAccess().getXorExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__1__Impl
	rule__XorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getXOR_OPERATORTerminalRuleCall_1_1()); }
	RULE_XOR_OPERATOR
	{ after(grammarAccess.getXorExpressionAccess().getXOR_OPERATORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
	(rule__XorExpression__RightAssignment_1_2)
	{ after(grammarAccess.getXorExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getCompExpressionParserRuleCall_0()); }
	ruleCompExpression
	{ after(grammarAccess.getAndExpressionAccess().getCompExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAndExpressionAccess().getAndExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getAND_OPERATORTerminalRuleCall_1_1()); }
	RULE_AND_OPERATOR
	{ after(grammarAccess.getAndExpressionAccess().getAND_OPERATORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
	(rule__AndExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAndExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group__0__Impl
	rule__CompExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getEquExpressionParserRuleCall_0()); }
	ruleEquExpression
	{ after(grammarAccess.getCompExpressionAccess().getEquExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getGroup_1()); }
	(rule__CompExpression__Group_1__0)*
	{ after(grammarAccess.getCompExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__0__Impl
	rule__CompExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getCompExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompExpressionAccess().getCompExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__1__Impl
	rule__CompExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getCompOpAssignment_1_1()); }
	(rule__CompExpression__CompOpAssignment_1_1)
	{ after(grammarAccess.getCompExpressionAccess().getCompOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompExpressionAccess().getRightAssignment_1_2()); }
	(rule__CompExpression__RightAssignment_1_2)
	{ after(grammarAccess.getCompExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group__0__Impl
	rule__EquExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getAddExpressionParserRuleCall_0()); }
	ruleAddExpression
	{ after(grammarAccess.getEquExpressionAccess().getAddExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getGroup_1()); }
	(rule__EquExpression__Group_1__0)*
	{ after(grammarAccess.getEquExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EquExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__0__Impl
	rule__EquExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getEquExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEquExpressionAccess().getEquExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__1__Impl
	rule__EquExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getEquOpAssignment_1_1()); }
	(rule__EquExpression__EquOpAssignment_1_1)
	{ after(grammarAccess.getEquExpressionAccess().getEquOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EquExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEquExpressionAccess().getRightAssignment_1_2()); }
	(rule__EquExpression__RightAssignment_1_2)
	{ after(grammarAccess.getEquExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getMulExpressionParserRuleCall_0()); }
	ruleMulExpression
	{ after(grammarAccess.getAddExpressionAccess().getMulExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
	(rule__AddExpression__Group_1__0)*
	{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getAddExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getAddExpressionAccess().getAddExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getAddOpAssignment_1_1()); }
	(rule__AddExpression__AddOpAssignment_1_1)
	{ after(grammarAccess.getAddExpressionAccess().getAddOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
	(rule__AddExpression__RightAssignment_1_2)
	{ after(grammarAccess.getAddExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpression__Group__0__Impl
	rule__MulExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExpressionAccess().getPowerExpressionParserRuleCall_0()); }
	rulePowerExpression
	{ after(grammarAccess.getMulExpressionAccess().getPowerExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExpressionAccess().getGroup_1()); }
	(rule__MulExpression__Group_1__0)*
	{ after(grammarAccess.getMulExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MulExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpression__Group_1__0__Impl
	rule__MulExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExpressionAccess().getMulExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMulExpressionAccess().getMulExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpression__Group_1__1__Impl
	rule__MulExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExpressionAccess().getMulOpAssignment_1_1()); }
	(rule__MulExpression__MulOpAssignment_1_1)
	{ after(grammarAccess.getMulExpressionAccess().getMulOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MulExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMulExpressionAccess().getRightAssignment_1_2()); }
	(rule__MulExpression__RightAssignment_1_2)
	{ after(grammarAccess.getMulExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__0__Impl
	rule__PowerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
	{ after(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
	(rule__PowerExpression__Group_1__0)*
	{ after(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__0__Impl
	rule__PowerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getPowerExpressionLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPowerExpressionAccess().getPowerExpressionLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__1__Impl
	rule__PowerExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getPOWER_OPERATORTerminalRuleCall_1_1()); }
	RULE_POWER_OPERATOR
	{ after(grammarAccess.getPowerExpressionAccess().getPOWER_OPERATORTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PowerExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
	(rule__PowerExpression__RightAssignment_1_2)
	{ after(grammarAccess.getPowerExpressionAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getUnOpAssignment_1_0()); }
	(rule__UnaryExpression__UnOpAssignment_1_0)
	{ after(grammarAccess.getUnaryExpressionAccess().getUnOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1_1()); }
	(rule__UnaryExpression__RightAssignment_1_1)
	{ after(grammarAccess.getUnaryExpressionAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__0__Impl
	rule__PrimaryExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); }
	'('
	{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__1__Impl
	rule__PrimaryExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getNestExprAssignment_5_1()); }
	(rule__PrimaryExpression__NestExprAssignment_5_1)
	{ after(grammarAccess.getPrimaryExpressionAccess().getNestExprAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_2()); }
	')'
	{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StatementList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__0__Impl
	rule__StatementList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
	()
	{ after(grammarAccess.getStatementListAccess().getStatementListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StatementList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementListAccess().getStatementsAssignment_1()); }
	(rule__StatementList__StatementsAssignment_1)*
	{ after(grammarAccess.getStatementListAccess().getStatementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0_0()); }
	ruleAssignmentStatement
	{ after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__0__Impl
	rule__Statement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getFBInvocationParserRuleCall_3_0()); }
	ruleFBInvocation
	{ after(grammarAccess.getStatementAccess().getFBInvocationParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__0__Impl
	rule__Statement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSubprogramControlStatementParserRuleCall_4_0()); }
	ruleSubprogramControlStatement
	{ after(grammarAccess.getStatementAccess().getSubprogramControlStatementParserRuleCall_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__0__Impl
	rule__Statement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getExitStatementParserRuleCall_5_0()); }
	ruleExitStatement
	{ after(grammarAccess.getStatementAccess().getExitStatementParserRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_5_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getProcessStatementsParserRuleCall_6_0()); }
	ruleProcessStatements
	{ after(grammarAccess.getStatementAccess().getProcessStatementsParserRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_7__0__Impl
	rule__Statement__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSetStateStatementParserRuleCall_7_0()); }
	ruleSetStateStatement
	{ after(grammarAccess.getStatementAccess().getSetStateStatementParserRuleCall_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_8__0__Impl
	rule__Statement__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getResetTimerStatementParserRuleCall_8_0()); }
	ruleResetTimerStatement
	{ after(grammarAccess.getStatementAccess().getResetTimerStatementParserRuleCall_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_8_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__0__Impl
	rule__AssignmentStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getAlternatives_0()); }
	(rule__AssignmentStatement__Alternatives_0)
	{ after(grammarAccess.getAssignmentStatementAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__1__Impl
	rule__AssignmentStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getAssignmentStatementAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AssignmentStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentStatementAccess().getValueAssignment_2()); }
	(rule__AssignmentStatement__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentStatementAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }
	'IF'
	{ after(grammarAccess.getIfStatementAccess().getIFKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getMainCondAssignment_1()); }
	(rule__IfStatement__MainCondAssignment_1)
	{ after(grammarAccess.getIfStatementAccess().getMainCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTHENKeyword_2()); }
	'THEN'
	{ after(grammarAccess.getIfStatementAccess().getTHENKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getMainStatementAssignment_3()); }
	(rule__IfStatement__MainStatementAssignment_3)
	{ after(grammarAccess.getIfStatementAccess().getMainStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_4()); }
	(rule__IfStatement__Group_4__0)*
	{ after(grammarAccess.getIfStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
	rule__IfStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
	(rule__IfStatement__Group_5__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getEND_IFKeyword_6()); }
	'END_IF'
	{ after(grammarAccess.getIfStatementAccess().getEND_IFKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__0__Impl
	rule__IfStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getELSIFKeyword_4_0()); }
	'ELSIF'
	{ after(grammarAccess.getIfStatementAccess().getELSIFKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__1__Impl
	rule__IfStatement__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfCondAssignment_4_1()); }
	(rule__IfStatement__ElseIfCondAssignment_4_1)
	{ after(grammarAccess.getIfStatementAccess().getElseIfCondAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__2__Impl
	rule__IfStatement__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getTHENKeyword_4_2()); }
	'THEN'
	{ after(grammarAccess.getIfStatementAccess().getTHENKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseIfStatementsAssignment_4_3()); }
	(rule__IfStatement__ElseIfStatementsAssignment_4_3)
	{ after(grammarAccess.getIfStatementAccess().getElseIfStatementsAssignment_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getELSEKeyword_5_0()); }
	'ELSE'
	{ after(grammarAccess.getIfStatementAccess().getELSEKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
	(rule__IfStatement__ElseStatementAssignment_5_1)
	{ after(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__0__Impl
	rule__CaseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCASEKeyword_0()); }
	'CASE'
	{ after(grammarAccess.getCaseStatementAccess().getCASEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__1__Impl
	rule__CaseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCondAssignment_1()); }
	(rule__CaseStatement__CondAssignment_1)
	{ after(grammarAccess.getCaseStatementAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__2__Impl
	rule__CaseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getOFKeyword_2()); }
	'OF'
	{ after(grammarAccess.getCaseStatementAccess().getOFKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__3__Impl
	rule__CaseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getCaseElementsAssignment_3()); }
	(rule__CaseStatement__CaseElementsAssignment_3)*
	{ after(grammarAccess.getCaseStatementAccess().getCaseElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__4__Impl
	rule__CaseStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getGroup_4()); }
	(rule__CaseStatement__Group_4__0)?
	{ after(grammarAccess.getCaseStatementAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getEND_CASEKeyword_5()); }
	'END_CASE'
	{ after(grammarAccess.getCaseStatementAccess().getEND_CASEKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseStatement__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group_4__0__Impl
	rule__CaseStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getELSEKeyword_4_0()); }
	'ELSE'
	{ after(grammarAccess.getCaseStatementAccess().getELSEKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseStatementAccess().getElseStatementAssignment_4_1()); }
	(rule__CaseStatement__ElseStatementAssignment_4_1)
	{ after(grammarAccess.getCaseStatementAccess().getElseStatementAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseElement__Group__0__Impl
	rule__CaseElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseElementAccess().getCaseListAssignment_0()); }
	(rule__CaseElement__CaseListAssignment_0)
	{ after(grammarAccess.getCaseElementAccess().getCaseListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseElement__Group__1__Impl
	rule__CaseElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseElementAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getCaseElementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseElement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseElementAccess().getStatementAssignment_2()); }
	(rule__CaseElement__StatementAssignment_2)
	{ after(grammarAccess.getCaseElementAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseList__Group__0__Impl
	rule__CaseList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseListAccess().getCaseListElementAssignment_0()); }
	(rule__CaseList__CaseListElementAssignment_0)
	{ after(grammarAccess.getCaseListAccess().getCaseListElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseListAccess().getGroup_1()); }
	(rule__CaseList__Group_1__0)*
	{ after(grammarAccess.getCaseListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CaseList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseList__Group_1__0__Impl
	rule__CaseList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getCaseListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CaseList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCaseListAccess().getCaseListElementAssignment_1_1()); }
	(rule__CaseList__CaseListElementAssignment_1_1)
	{ after(grammarAccess.getCaseListAccess().getCaseListElementAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getFORKeyword_0()); }
	'FOR'
	{ after(grammarAccess.getForStatementAccess().getFORKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getVariableAssignment_1()); }
	(rule__ForStatement__VariableAssignment_1)
	{ after(grammarAccess.getForStatementAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getColonEqualsSignKeyword_2()); }
	':='
	{ after(grammarAccess.getForStatementAccess().getColonEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getForListAssignment_3()); }
	(rule__ForStatement__ForListAssignment_3)
	{ after(grammarAccess.getForStatementAccess().getForListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getDOKeyword_4()); }
	'DO'
	{ after(grammarAccess.getForStatementAccess().getDOKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getStatementAssignment_5()); }
	(rule__ForStatement__StatementAssignment_5)
	{ after(grammarAccess.getForStatementAccess().getStatementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getEND_FORKeyword_6()); }
	'END_FOR'
	{ after(grammarAccess.getForStatementAccess().getEND_FORKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group__0__Impl
	rule__ForList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getStartAssignment_0()); }
	(rule__ForList__StartAssignment_0)
	{ after(grammarAccess.getForListAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group__1__Impl
	rule__ForList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getTOKeyword_1()); }
	'TO'
	{ after(grammarAccess.getForListAccess().getTOKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group__2__Impl
	rule__ForList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getEndAssignment_2()); }
	(rule__ForList__EndAssignment_2)
	{ after(grammarAccess.getForListAccess().getEndAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getGroup_3()); }
	(rule__ForList__Group_3__0)?
	{ after(grammarAccess.getForListAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForList__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group_3__0__Impl
	rule__ForList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getBYKeyword_3_0()); }
	'BY'
	{ after(grammarAccess.getForListAccess().getBYKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForListAccess().getStepAssignment_3_1()); }
	(rule__ForList__StepAssignment_3_1)
	{ after(grammarAccess.getForListAccess().getStepAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWHILEKeyword_0()); }
	'WHILE'
	{ after(grammarAccess.getWhileStatementAccess().getWHILEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
	(rule__WhileStatement__CondAssignment_1)
	{ after(grammarAccess.getWhileStatementAccess().getCondAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getDOKeyword_2()); }
	'DO'
	{ after(grammarAccess.getWhileStatementAccess().getDOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getStatementAssignment_3()); }
	(rule__WhileStatement__StatementAssignment_3)
	{ after(grammarAccess.getWhileStatementAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getEND_WHILEKeyword_4()); }
	'END_WHILE'
	{ after(grammarAccess.getWhileStatementAccess().getEND_WHILEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RepeatStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__0__Impl
	rule__RepeatStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getREPEATKeyword_0()); }
	'REPEAT'
	{ after(grammarAccess.getRepeatStatementAccess().getREPEATKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__1__Impl
	rule__RepeatStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getStatementAssignment_1()); }
	(rule__RepeatStatement__StatementAssignment_1)
	{ after(grammarAccess.getRepeatStatementAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__2__Impl
	rule__RepeatStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getUNTILKeyword_2()); }
	'UNTIL'
	{ after(grammarAccess.getRepeatStatementAccess().getUNTILKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__3__Impl
	rule__RepeatStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getCondAssignment_3()); }
	(rule__RepeatStatement__CondAssignment_3)
	{ after(grammarAccess.getRepeatStatementAccess().getCondAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RepeatStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRepeatStatementAccess().getEND_REPEATKeyword_4()); }
	'END_REPEAT'
	{ after(grammarAccess.getRepeatStatementAccess().getEND_REPEATKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubprogramControlStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramControlStatement__Group__0__Impl
	rule__SubprogramControlStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramControlStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramControlStatementAccess().getSubprogramControlStatementAction_0()); }
	()
	{ after(grammarAccess.getSubprogramControlStatementAccess().getSubprogramControlStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramControlStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubprogramControlStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubprogramControlStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubprogramControlStatementAccess().getRETURNKeyword_1()); }
	'RETURN'
	{ after(grammarAccess.getSubprogramControlStatementAccess().getRETURNKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExitStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__0__Impl
	rule__ExitStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
	()
	{ after(grammarAccess.getExitStatementAccess().getExitStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExitStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExitStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExitStatementAccess().getEXITKeyword_1()); }
	'EXIT'
	{ after(grammarAccess.getExitStatementAccess().getEXITKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSpecificationInit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSpecificationInit__Group__0__Impl
	rule__SimpleSpecificationInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSpecificationInitAccess().getSimpleSpecificationInitAction_0()); }
	()
	{ after(grammarAccess.getSimpleSpecificationInitAccess().getSimpleSpecificationInitAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSpecificationInit__Group__1__Impl
	rule__SimpleSpecificationInit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSpecificationInitAccess().getTypeAssignment_1()); }
	(rule__SimpleSpecificationInit__TypeAssignment_1)
	{ after(grammarAccess.getSimpleSpecificationInitAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSpecificationInit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSpecificationInitAccess().getGroup_2()); }
	(rule__SimpleSpecificationInit__Group_2__0)?
	{ after(grammarAccess.getSimpleSpecificationInitAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSpecificationInit__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSpecificationInit__Group_2__0__Impl
	rule__SimpleSpecificationInit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSpecificationInitAccess().getColonEqualsSignKeyword_2_0()); }
	':='
	{ after(grammarAccess.getSimpleSpecificationInitAccess().getColonEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SimpleSpecificationInit__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimpleSpecificationInitAccess().getValueAssignment_2_1()); }
	(rule__SimpleSpecificationInit__ValueAssignment_2_1)
	{ after(grammarAccess.getSimpleSpecificationInitAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__0__Impl
	rule__VarList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getVarsAssignment_0()); }
	(rule__VarList__VarsAssignment_0)
	{ after(grammarAccess.getVarListAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getGroup_1()); }
	(rule__VarList__Group_1__0)*
	{ after(grammarAccess.getVarListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group_1__0__Impl
	rule__VarList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVarListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarListAccess().getVarsAssignment_1_1()); }
	(rule__VarList__VarsAssignment_1_1)
	{ after(grammarAccess.getVarListAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarInitDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarInitDeclaration__Group__0__Impl
	rule__VarInitDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarInitDeclarationAccess().getVarListAssignment_0()); }
	(rule__VarInitDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getVarInitDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarInitDeclaration__Group__1__Impl
	rule__VarInitDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarInitDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVarInitDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarInitDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarInitDeclarationAccess().getAlternatives_2()); }
	(rule__VarInitDeclaration__Alternatives_2)
	{ after(grammarAccess.getVarInitDeclarationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group__0__Impl
	rule__InputVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getInputVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getInputVarDeclarationAccess().getInputVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group__1__Impl
	rule__InputVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getVAR_INPUTKeyword_1()); }
	'VAR_INPUT'
	{ after(grammarAccess.getInputVarDeclarationAccess().getVAR_INPUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group__2__Impl
	rule__InputVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getGroup_2()); }
	(rule__InputVarDeclaration__Group_2__0)*
	{ after(grammarAccess.getInputVarDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getInputVarDeclarationAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputVarDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group_2__0__Impl
	rule__InputVarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getVarsAssignment_2_0()); }
	(rule__InputVarDeclaration__VarsAssignment_2_0)
	{ after(grammarAccess.getInputVarDeclarationAccess().getVarsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputVarDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getInputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group__0__Impl
	rule__OutputVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getOutputVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getOutputVarDeclarationAccess().getOutputVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group__1__Impl
	rule__OutputVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getVAR_OUTPUTKeyword_1()); }
	'VAR_OUTPUT'
	{ after(grammarAccess.getOutputVarDeclarationAccess().getVAR_OUTPUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group__2__Impl
	rule__OutputVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getGroup_2()); }
	(rule__OutputVarDeclaration__Group_2__0)*
	{ after(grammarAccess.getOutputVarDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getOutputVarDeclarationAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OutputVarDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group_2__0__Impl
	rule__OutputVarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getVarsAssignment_2_0()); }
	(rule__OutputVarDeclaration__VarsAssignment_2_0)
	{ after(grammarAccess.getOutputVarDeclarationAccess().getVarsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OutputVarDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getOutputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group__0__Impl
	rule__InputOutputVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getInputOutputVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getInputOutputVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group__1__Impl
	rule__InputOutputVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getVAR_IN_OUTKeyword_1()); }
	'VAR_IN_OUT'
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getVAR_IN_OUTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group__2__Impl
	rule__InputOutputVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getGroup_2()); }
	(rule__InputOutputVarDeclaration__Group_2__0)*
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputOutputVarDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group_2__0__Impl
	rule__InputOutputVarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getVarsAssignment_2_0()); }
	(rule__InputOutputVarDeclaration__VarsAssignment_2_0)
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getVarsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputOutputVarDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputOutputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getInputOutputVarDeclarationAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__0__Impl
	rule__VarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getVarDeclarationAccess().getVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__1__Impl
	rule__VarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getVARKeyword_1()); }
	'VAR'
	{ after(grammarAccess.getVarDeclarationAccess().getVARKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__2__Impl
	rule__VarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getConstAssignment_2()); }
	(rule__VarDeclaration__ConstAssignment_2)?
	{ after(grammarAccess.getVarDeclarationAccess().getConstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__3__Impl
	rule__VarDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
	(rule__VarDeclaration__Group_3__0)*
	{ after(grammarAccess.getVarDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getEND_VARKeyword_4()); }
	'END_VAR'
	{ after(grammarAccess.getVarDeclarationAccess().getEND_VARKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_3__0__Impl
	rule__VarDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getVarsAssignment_3_0()); }
	(rule__VarDeclaration__VarsAssignment_3_0)
	{ after(grammarAccess.getVarDeclarationAccess().getVarsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group__0__Impl
	rule__TempVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getTempVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getTempVarDeclarationAccess().getTempVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group__1__Impl
	rule__TempVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getVAR_TEMPKeyword_1()); }
	'VAR_TEMP'
	{ after(grammarAccess.getTempVarDeclarationAccess().getVAR_TEMPKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group__2__Impl
	rule__TempVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getGroup_2()); }
	(rule__TempVarDeclaration__Group_2__0)*
	{ after(grammarAccess.getTempVarDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getTempVarDeclarationAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TempVarDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group_2__0__Impl
	rule__TempVarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getVarsAssignment_2_0()); }
	(rule__TempVarDeclaration__VarsAssignment_2_0)
	{ after(grammarAccess.getTempVarDeclarationAccess().getVarsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TempVarDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTempVarDeclarationAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getTempVarDeclarationAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalVarInitDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarInitDeclaration__Group__0__Impl
	rule__ExternalVarInitDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarInitDeclarationAccess().getVarListAssignment_0()); }
	(rule__ExternalVarInitDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getExternalVarInitDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarInitDeclaration__Group__1__Impl
	rule__ExternalVarInitDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarInitDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getExternalVarInitDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarInitDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarInitDeclarationAccess().getTypeAssignment_2()); }
	(rule__ExternalVarInitDeclaration__TypeAssignment_2)
	{ after(grammarAccess.getExternalVarInitDeclarationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group__0__Impl
	rule__ExternalVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getExternalVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getExternalVarDeclarationAccess().getExternalVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group__1__Impl
	rule__ExternalVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getVAR_EXTERNALKeyword_1()); }
	'VAR_EXTERNAL'
	{ after(grammarAccess.getExternalVarDeclarationAccess().getVAR_EXTERNALKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group__2__Impl
	rule__ExternalVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getConstAssignment_2()); }
	(rule__ExternalVarDeclaration__ConstAssignment_2)?
	{ after(grammarAccess.getExternalVarDeclarationAccess().getConstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group__3__Impl
	rule__ExternalVarDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getGroup_3()); }
	(rule__ExternalVarDeclaration__Group_3__0)*
	{ after(grammarAccess.getExternalVarDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getEND_VARKeyword_4()); }
	'END_VAR'
	{ after(grammarAccess.getExternalVarDeclarationAccess().getEND_VARKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalVarDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group_3__0__Impl
	rule__ExternalVarDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getVarsAssignment_3_0()); }
	(rule__ExternalVarDeclaration__VarsAssignment_3_0)
	{ after(grammarAccess.getExternalVarDeclarationAccess().getVarsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalVarDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalVarDeclarationAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getExternalVarDeclarationAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarInitDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarInitDeclaration__Group__0__Impl
	rule__GlobalVarInitDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getVarListAssignment_0()); }
	(rule__GlobalVarInitDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarInitDeclaration__Group__1__Impl
	rule__GlobalVarInitDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getATKeyword_1()); }
	'AT'
	{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getATKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarInitDeclaration__Group__2__Impl
	rule__GlobalVarInitDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getLocationAssignment_2()); }
	(rule__GlobalVarInitDeclaration__LocationAssignment_2)
	{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getLocationAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarInitDeclaration__Group__3__Impl
	rule__GlobalVarInitDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarInitDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getTypeAssignment_4()); }
	(rule__GlobalVarInitDeclaration__TypeAssignment_4)
	{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group__0__Impl
	rule__GlobalVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getGlobalVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getGlobalVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group__1__Impl
	rule__GlobalVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getVAR_GLOBALKeyword_1()); }
	'VAR_GLOBAL'
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getVAR_GLOBALKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group__2__Impl
	rule__GlobalVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getConstAssignment_2()); }
	(rule__GlobalVarDeclaration__ConstAssignment_2)?
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getConstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group__3__Impl
	rule__GlobalVarDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getAlternatives_3()); }
	(rule__GlobalVarDeclaration__Alternatives_3)*
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getEND_VARKeyword_4()); }
	'END_VAR'
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getEND_VARKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclaration__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group_3_0__0__Impl
	rule__GlobalVarDeclaration__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getVarsSimpleAssignment_3_0_0()); }
	(rule__GlobalVarDeclaration__VarsSimpleAssignment_3_0_0)
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getVarsSimpleAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getSemicolonKeyword_3_0_1()); }
	';'
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getSemicolonKeyword_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalVarDeclaration__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group_3_1__0__Impl
	rule__GlobalVarDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getVarsAsAssignment_3_1_0()); }
	(rule__GlobalVarDeclaration__VarsAsAssignment_3_1_0)
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getVarsAsAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalVarDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalVarDeclarationAccess().getSemicolonKeyword_3_1_1()); }
	';'
	{ after(grammarAccess.getGlobalVarDeclarationAccess().getSemicolonKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVarList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarList__Group__0__Impl
	rule__ProcessVarList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarListAccess().getVarsAssignment_0()); }
	(rule__ProcessVarList__VarsAssignment_0)
	{ after(grammarAccess.getProcessVarListAccess().getVarsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarListAccess().getGroup_1()); }
	(rule__ProcessVarList__Group_1__0)*
	{ after(grammarAccess.getProcessVarListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVarList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarList__Group_1__0__Impl
	rule__ProcessVarList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getProcessVarListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarListAccess().getVarsAssignment_1_1()); }
	(rule__ProcessVarList__VarsAssignment_1_1)
	{ after(grammarAccess.getProcessVarListAccess().getVarsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVarInitDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarInitDeclaration__Group__0__Impl
	rule__ProcessVarInitDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarInitDeclarationAccess().getVarListAssignment_0()); }
	(rule__ProcessVarInitDeclaration__VarListAssignment_0)
	{ after(grammarAccess.getProcessVarInitDeclarationAccess().getVarListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarInitDeclaration__Group__1__Impl
	rule__ProcessVarInitDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarInitDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getProcessVarInitDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarInitDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarInitDeclarationAccess().getProcessAssignment_2()); }
	(rule__ProcessVarInitDeclaration__ProcessAssignment_2)
	{ after(grammarAccess.getProcessVarInitDeclarationAccess().getProcessAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVarDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group__0__Impl
	rule__ProcessVarDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getProcessVarDeclarationAction_0()); }
	()
	{ after(grammarAccess.getProcessVarDeclarationAccess().getProcessVarDeclarationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group__1__Impl
	rule__ProcessVarDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getVAR_PROCESSKeyword_1()); }
	'VAR_PROCESS'
	{ after(grammarAccess.getProcessVarDeclarationAccess().getVAR_PROCESSKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group__2__Impl
	rule__ProcessVarDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getGroup_2()); }
	(rule__ProcessVarDeclaration__Group_2__0)*
	{ after(grammarAccess.getProcessVarDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getEND_VARKeyword_3()); }
	'END_VAR'
	{ after(grammarAccess.getProcessVarDeclarationAccess().getEND_VARKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessVarDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group_2__0__Impl
	rule__ProcessVarDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getVarsAssignment_2_0()); }
	(rule__ProcessVarDeclaration__VarsAssignment_2_0)
	{ after(grammarAccess.getProcessVarDeclarationAccess().getVarsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessVarDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessVarDeclarationAccess().getSemicolonKeyword_2_1()); }
	';'
	{ after(grammarAccess.getProcessVarDeclarationAccess().getSemicolonKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__0__Impl
	rule__ArrayVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getVariableAssignment_0()); }
	(rule__ArrayVariable__VariableAssignment_0)
	{ after(grammarAccess.getArrayVariableAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__1__Impl
	rule__ArrayVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArrayVariableAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__2__Impl
	rule__ArrayVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getIndexAssignment_2()); }
	(rule__ArrayVariable__IndexAssignment_2)
	{ after(grammarAccess.getArrayVariableAccess().getIndexAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayVariableAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySpecificationInit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecificationInit__Group__0__Impl
	rule__ArraySpecificationInit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationInitAccess().getInitAssignment_0()); }
	(rule__ArraySpecificationInit__InitAssignment_0)
	{ after(grammarAccess.getArraySpecificationInitAccess().getInitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecificationInit__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationInitAccess().getGroup_1()); }
	(rule__ArraySpecificationInit__Group_1__0)?
	{ after(grammarAccess.getArraySpecificationInitAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySpecificationInit__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecificationInit__Group_1__0__Impl
	rule__ArraySpecificationInit__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationInitAccess().getColonEqualsSignKeyword_1_0()); }
	':='
	{ after(grammarAccess.getArraySpecificationInitAccess().getColonEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecificationInit__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationInitAccess().getValuesAssignment_1_1()); }
	(rule__ArraySpecificationInit__ValuesAssignment_1_1)
	{ after(grammarAccess.getArraySpecificationInitAccess().getValuesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArraySpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__0__Impl
	rule__ArraySpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getARRAYKeyword_0()); }
	'ARRAY'
	{ after(grammarAccess.getArraySpecificationAccess().getARRAYKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__1__Impl
	rule__ArraySpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getArraySpecificationAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__2__Impl
	rule__ArraySpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getAlternatives_2()); }
	(rule__ArraySpecification__Alternatives_2)
	{ after(grammarAccess.getArraySpecificationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__3__Impl
	rule__ArraySpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArraySpecificationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__4__Impl
	rule__ArraySpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getOFKeyword_4()); }
	'OF'
	{ after(grammarAccess.getArraySpecificationAccess().getOFKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArraySpecification__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArraySpecificationAccess().getTypeAssignment_5()); }
	(rule__ArraySpecification__TypeAssignment_5)
	{ after(grammarAccess.getArraySpecificationAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInterval__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInterval__Group__0__Impl
	rule__ArrayInterval__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIntervalAccess().getStartAssignment_0()); }
	(rule__ArrayInterval__StartAssignment_0)
	{ after(grammarAccess.getArrayIntervalAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInterval__Group__1__Impl
	rule__ArrayInterval__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIntervalAccess().getFullStopFullStopKeyword_1()); }
	'..'
	{ after(grammarAccess.getArrayIntervalAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInterval__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayIntervalAccess().getEndAssignment_2()); }
	(rule__ArrayInterval__EndAssignment_2)
	{ after(grammarAccess.getArrayIntervalAccess().getEndAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group__0__Impl
	rule__ArrayInitialization__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayInitializationAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group__1__Impl
	rule__ArrayInitialization__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getElementsAssignment_1()); }
	(rule__ArrayInitialization__ElementsAssignment_1)
	{ after(grammarAccess.getArrayInitializationAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group__2__Impl
	rule__ArrayInitialization__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getGroup_2()); }
	(rule__ArrayInitialization__Group_2__0)*
	{ after(grammarAccess.getArrayInitializationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getArrayInitializationAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitialization__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group_2__0__Impl
	rule__ArrayInitialization__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getArrayInitializationAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitialization__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializationAccess().getElementsAssignment_2_1()); }
	(rule__ArrayInitialization__ElementsAssignment_2_1)
	{ after(grammarAccess.getArrayInitializationAccess().getElementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__0__Impl
	rule__TimeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getTIME_PREF_LITERALTerminalRuleCall_0()); }
	RULE_TIME_PREF_LITERAL
	{ after(grammarAccess.getTimeLiteralAccess().getTIME_PREF_LITERALTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__1__Impl
	rule__TimeLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getNumberSignKeyword_1()); }
	'#'
	{ after(grammarAccess.getTimeLiteralAccess().getNumberSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__2__Impl
	rule__TimeLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getHyphenMinusKeyword_2()); }
	('-')?
	{ after(grammarAccess.getTimeLiteralAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getIntervalAssignment_3()); }
	(rule__TimeLiteral__IntervalAssignment_3)
	{ after(grammarAccess.getTimeLiteralAccess().getIntervalAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInteger__Group__0__Impl
	rule__SignedInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntegerAccess().getISigAssignment_0()); }
	(rule__SignedInteger__ISigAssignment_0)?
	{ after(grammarAccess.getSignedIntegerAccess().getISigAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInteger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntegerAccess().getValueAssignment_1()); }
	(rule__SignedInteger__ValueAssignment_1)
	{ after(grammarAccess.getSignedIntegerAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__0__Impl
	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
	(rule__IntegerLiteral__Group_0__0)?
	{ after(grammarAccess.getIntegerLiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
	(rule__IntegerLiteral__ValueAssignment_1)
	{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group_0__0__Impl
	rule__IntegerLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getTypeAssignment_0_0()); }
	(rule__IntegerLiteral__TypeAssignment_0_0)
	{ after(grammarAccess.getIntegerLiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getNumberSignKeyword_0_1()); }
	'#'
	{ after(grammarAccess.getIntegerLiteralAccess().getNumberSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__0__Impl
	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getGroup_0()); }
	(rule__RealLiteral__Group_0__0)?
	{ after(grammarAccess.getRealLiteralAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__1__Impl
	rule__RealLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getRSigAssignment_1()); }
	(rule__RealLiteral__RSigAssignment_1)?
	{ after(grammarAccess.getRealLiteralAccess().getRSigAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getValueAssignment_2()); }
	(rule__RealLiteral__ValueAssignment_2)
	{ after(grammarAccess.getRealLiteralAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group_0__0__Impl
	rule__RealLiteral__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getTypeAssignment_0_0()); }
	(rule__RealLiteral__TypeAssignment_0_0)
	{ after(grammarAccess.getRealLiteralAccess().getTypeAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RealLiteral__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRealLiteralAccess().getNumberSignKeyword_0_1()); }
	'#'
	{ after(grammarAccess.getRealLiteralAccess().getNumberSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__UnorderedGroup
	@init {
		int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getModelAccess().getUnorderedGroup());
	}
:
	rule__Model__UnorderedGroup__0
	?
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
	}
:
		(
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 0);
				}
				{
					selected = true;
				}
				(
					{ before(grammarAccess.getModelAccess().getConfAssignment_0()); }
					(rule__Model__ConfAssignment_0)
					{ after(grammarAccess.getModelAccess().getConfAssignment_0()); }
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 1);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getGlobVarsAssignment_1()); }
						(rule__Model__GlobVarsAssignment_1)
						{ after(grammarAccess.getModelAccess().getGlobVarsAssignment_1()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getGlobVarsAssignment_1()); }
						((rule__Model__GlobVarsAssignment_1)=>rule__Model__GlobVarsAssignment_1)*
						{ after(grammarAccess.getModelAccess().getGlobVarsAssignment_1()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 2);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getProgramsAssignment_2()); }
						(rule__Model__ProgramsAssignment_2)
						{ after(grammarAccess.getModelAccess().getProgramsAssignment_2()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getProgramsAssignment_2()); }
						((rule__Model__ProgramsAssignment_2)=>rule__Model__ProgramsAssignment_2)*
						{ after(grammarAccess.getModelAccess().getProgramsAssignment_2()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 3);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getFbsAssignment_3()); }
						(rule__Model__FbsAssignment_3)
						{ after(grammarAccess.getModelAccess().getFbsAssignment_3()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getFbsAssignment_3()); }
						((rule__Model__FbsAssignment_3)=>rule__Model__FbsAssignment_3)*
						{ after(grammarAccess.getModelAccess().getFbsAssignment_3()); }
					)
				)
			)
		)|
		( 
			{getUnorderedGroupHelper().canSelect(grammarAccess.getModelAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getModelAccess().getUnorderedGroup(), 4);
				}
				{
					selected = true;
				}
				(
					(
						{ before(grammarAccess.getModelAccess().getFunsAssignment_4()); }
						(rule__Model__FunsAssignment_4)
						{ after(grammarAccess.getModelAccess().getFunsAssignment_4()); }
					)
					(
						{ before(grammarAccess.getModelAccess().getFunsAssignment_4()); }
						((rule__Model__FunsAssignment_4)=>rule__Model__FunsAssignment_4)*
						{ after(grammarAccess.getModelAccess().getFunsAssignment_4()); }
					)
				)
			)
		)
		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
	rule__Model__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__UnorderedGroup__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConfAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConfConfigurationParserRuleCall_0_0()); }
		ruleConfiguration
		{ after(grammarAccess.getModelAccess().getConfConfigurationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__GlobVarsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getGlobVarsGlobalVarDeclarationParserRuleCall_1_0()); }
		ruleGlobalVarDeclaration
		{ after(grammarAccess.getModelAccess().getGlobVarsGlobalVarDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ProgramsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getProgramsProgramParserRuleCall_2_0()); }
		ruleProgram
		{ after(grammarAccess.getModelAccess().getProgramsProgramParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FbsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFbsFunctionBlockParserRuleCall_3_0()); }
		ruleFunctionBlock
		{ after(grammarAccess.getModelAccess().getFbsFunctionBlockParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFunsFunctionParserRuleCall_4_0()); }
		ruleFunction
		{ after(grammarAccess.getModelAccess().getFunsFunctionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__ConfGlobVarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getConfGlobVarsGlobalVarDeclarationParserRuleCall_2_0_0()); }
		ruleGlobalVarDeclaration
		{ after(grammarAccess.getConfigurationAccess().getConfGlobVarsGlobalVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__ResourcesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getResourcesResourceParserRuleCall_2_1_0()); }
		ruleResource
		{ after(grammarAccess.getConfigurationAccess().getResourcesResourceParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getResourceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getResourceAccess().getTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__ResGlobVarsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getResGlobVarsGlobalVarDeclarationParserRuleCall_4_0()); }
		ruleGlobalVarDeclaration
		{ after(grammarAccess.getResourceAccess().getResGlobVarsGlobalVarDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Resource__ResStatementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResourceAccess().getResStatementSingleResourceParserRuleCall_5_0()); }
		ruleSingleResource
		{ after(grammarAccess.getResourceAccess().getResStatementSingleResourceParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__TasksAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleResourceAccess().getTasksTaskParserRuleCall_1_0_0_0()); }
		ruleTask
		{ after(grammarAccess.getSingleResourceAccess().getTasksTaskParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleResource__ProgramConfsAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleResourceAccess().getProgramConfsProgramConfigurationParserRuleCall_1_1_0_0()); }
		ruleProgramConfiguration
		{ after(grammarAccess.getSingleResourceAccess().getProgramConfsProgramConfigurationParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__InitAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getInitTaskInitializationParserRuleCall_3_0()); }
		ruleTaskInitialization
		{ after(grammarAccess.getTaskAccess().getInitTaskInitializationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__SingleAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskInitializationAccess().getSingleConstantParserRuleCall_0_2_0()); }
		ruleConstant
		{ after(grammarAccess.getTaskInitializationAccess().getSingleConstantParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__IntervalAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskInitializationAccess().getIntervalConstantParserRuleCall_1_0_2_0()); }
		ruleConstant
		{ after(grammarAccess.getTaskInitializationAccess().getIntervalConstantParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskInitialization__PriorityAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskInitializationAccess().getPriorityINTEGERTerminalRuleCall_1_4_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getTaskInitializationAccess().getPriorityINTEGERTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramConfigurationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__TaskAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfigurationAccess().getTaskTaskCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getProgramConfigurationAccess().getTaskTaskIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProgramConfigurationAccess().getTaskTaskIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getProgramConfigurationAccess().getTaskTaskCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__ProgramAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfigurationAccess().getProgramProgramCrossReference_4_0()); }
		(
			{ before(grammarAccess.getProgramConfigurationAccess().getProgramProgramIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProgramConfigurationAccess().getProgramProgramIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getProgramConfigurationAccess().getProgramProgramCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfiguration__ArgsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfigurationAccess().getArgsProgramConfElementsParserRuleCall_5_1_0()); }
		ruleProgramConfElements
		{ after(grammarAccess.getProgramConfigurationAccess().getArgsProgramConfElementsParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfElementsAccess().getElementsProgramConfElementParserRuleCall_0_0()); }
		ruleProgramConfElement
		{ after(grammarAccess.getProgramConfElementsAccess().getElementsProgramConfElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProgramConfElements__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramConfElementsAccess().getElementsProgramConfElementParserRuleCall_1_1_0()); }
		ruleProgramConfElement
		{ after(grammarAccess.getProgramConfElementsAccess().getElementsProgramConfElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__ProgramVarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getProgramVarSymbolicVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getAttachVariableConfElementAccess().getProgramVarSymbolicVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttachVariableConfElementAccess().getProgramVarSymbolicVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getAttachVariableConfElementAccess().getProgramVarSymbolicVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__AssigAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
		ruleAssignmentType
		{ after(grammarAccess.getAttachVariableConfElementAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__AttVarAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getAttVarSymbolicVariableCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getAttachVariableConfElementAccess().getAttVarSymbolicVariableIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAttachVariableConfElementAccess().getAttVarSymbolicVariableIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getAttachVariableConfElementAccess().getAttVarSymbolicVariableCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttachVariableConfElement__ConstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttachVariableConfElementAccess().getConstConstantParserRuleCall_2_1_0()); }
		ruleConstant
		{ after(grammarAccess.getAttachVariableConfElementAccess().getConstConstantParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__ActiveAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessConfElementAccess().getActiveACTIVEKeyword_1_0()); }
		(
			{ before(grammarAccess.getTemplateProcessConfElementAccess().getActiveACTIVEKeyword_1_0()); }
			'ACTIVE'
			{ after(grammarAccess.getTemplateProcessConfElementAccess().getActiveACTIVEKeyword_1_0()); }
		)
		{ after(grammarAccess.getTemplateProcessConfElementAccess().getActiveACTIVEKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessConfElementAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTemplateProcessConfElementAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__ProcessAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessConfElementAccess().getProcessProcessCrossReference_4_0()); }
		(
			{ before(grammarAccess.getTemplateProcessConfElementAccess().getProcessProcessIDTerminalRuleCall_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTemplateProcessConfElementAccess().getProcessProcessIDTerminalRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getTemplateProcessConfElementAccess().getProcessProcessCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessConfElement__ArgsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessConfElementAccess().getArgsTemplateProcessElementsParserRuleCall_5_1_0()); }
		ruleTemplateProcessElements
		{ after(grammarAccess.getTemplateProcessConfElementAccess().getArgsTemplateProcessElementsParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessElementsAccess().getElementsTemplateProcessAttachVariableConfElementParserRuleCall_0_0()); }
		ruleTemplateProcessAttachVariableConfElement
		{ after(grammarAccess.getTemplateProcessElementsAccess().getElementsTemplateProcessAttachVariableConfElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessElements__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessElementsAccess().getElementsTemplateProcessAttachVariableConfElementParserRuleCall_1_1_0()); }
		ruleTemplateProcessAttachVariableConfElement
		{ after(grammarAccess.getTemplateProcessElementsAccess().getElementsTemplateProcessAttachVariableConfElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__ProgramVarAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getProgramVarVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__AssigAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
		ruleAssignmentType
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__AttVarAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarVariableCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarVariableIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarVariableIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getAttVarVariableCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateProcessAttachVariableConfElement__ConstAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getConstConstantParserRuleCall_2_1_0()); }
		ruleConstant
		{ after(grammarAccess.getTemplateProcessAttachVariableConfElementAccess().getConstConstantParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgInVarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
		ruleInputVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgOutVarsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
		ruleOutputVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgInOutVarsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
		ruleInputOutputVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgVarsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgVarsVarDeclarationParserRuleCall_2_3_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgVarsVarDeclarationParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgTempVarsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgTempVarsTempVarDeclarationParserRuleCall_2_4_0()); }
		ruleTempVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgTempVarsTempVarDeclarationParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProgExternVarsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProgExternVarsExternalVarDeclarationParserRuleCall_2_5_0()); }
		ruleExternalVarDeclaration
		{ after(grammarAccess.getProgramAccess().getProgExternVarsExternalVarDeclarationParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ProcessesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_3_0()); }
		ruleProcess
		{ after(grammarAccess.getProgramAccess().getProcessesProcessParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionBlockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbInVarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
		ruleInputVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbOutVarsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
		ruleOutputVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbInOutVarsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
		ruleInputOutputVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbVarsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbVarsVarDeclarationParserRuleCall_2_3_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbVarsVarDeclarationParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbTempVarsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbTempVarsTempVarDeclarationParserRuleCall_2_4_0()); }
		ruleTempVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbTempVarsTempVarDeclarationParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__FbExternVarsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getFbExternVarsExternalVarDeclarationParserRuleCall_2_5_0()); }
		ruleExternalVarDeclaration
		{ after(grammarAccess.getFunctionBlockAccess().getFbExternVarsExternalVarDeclarationParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionBlock__ProcessesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionBlockAccess().getProcessesProcessParserRuleCall_3_0()); }
		ruleProcess
		{ after(grammarAccess.getFunctionBlockAccess().getProcessesProcessParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypeDataTypeNameParserRuleCall_3_0()); }
		ruleDataTypeName
		{ after(grammarAccess.getFunctionAccess().getTypeDataTypeNameParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunInVarsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunInVarsInputVarDeclarationParserRuleCall_4_0_0()); }
		ruleInputVarDeclaration
		{ after(grammarAccess.getFunctionAccess().getFunInVarsInputVarDeclarationParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunOutVarsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunOutVarsOutputVarDeclarationParserRuleCall_4_1_0()); }
		ruleOutputVarDeclaration
		{ after(grammarAccess.getFunctionAccess().getFunOutVarsOutputVarDeclarationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunInOutVarsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunInOutVarsInputOutputVarDeclarationParserRuleCall_4_2_0()); }
		ruleInputOutputVarDeclaration
		{ after(grammarAccess.getFunctionAccess().getFunInOutVarsInputOutputVarDeclarationParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__FunVarsAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getFunVarsVarDeclarationParserRuleCall_4_3_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getFunctionAccess().getFunVarsVarDeclarationParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__StatementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getStatementStatementListParserRuleCall_5_0()); }
		ruleStatementList
		{ after(grammarAccess.getFunctionAccess().getStatementStatementListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcInVarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
		ruleInputVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcInVarsInputVarDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcOutVarsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
		ruleOutputVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcOutVarsOutputVarDeclarationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcInOutVarsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
		ruleInputOutputVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcInOutVarsInputOutputVarDeclarationParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcProcessVarsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcProcessVarsProcessVarDeclarationParserRuleCall_2_3_0()); }
		ruleProcessVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcProcessVarsProcessVarDeclarationParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcVarsAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcVarsVarDeclarationParserRuleCall_2_4_0()); }
		ruleVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcVarsVarDeclarationParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcTempVarsAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcTempVarsTempVarDeclarationParserRuleCall_2_5_0()); }
		ruleTempVarDeclaration
		{ after(grammarAccess.getProcessAccess().getProcTempVarsTempVarDeclarationParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__StatesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_3_0()); }
		ruleState
		{ after(grammarAccess.getProcessAccess().getStatesStateParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__LoopedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getLoopedLOOPEDKeyword_2_0()); }
		(
			{ before(grammarAccess.getStateAccess().getLoopedLOOPEDKeyword_2_0()); }
			'LOOPED'
			{ after(grammarAccess.getStateAccess().getLoopedLOOPEDKeyword_2_0()); }
		)
		{ after(grammarAccess.getStateAccess().getLoopedLOOPEDKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getStatementStatementListParserRuleCall_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getStateAccess().getStatementStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__State__TimeoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateAccess().getTimeoutTimeoutStatementParserRuleCall_4_0()); }
		ruleTimeoutStatement
		{ after(grammarAccess.getStateAccess().getTimeoutTimeoutStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__StateAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatementAccess().getStateStateCrossReference_2_0_1_0()); }
		(
			{ before(grammarAccess.getSetStateStatementAccess().getStateStateIDTerminalRuleCall_2_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSetStateStatementAccess().getStateStateIDTerminalRuleCall_2_0_1_0_1()); }
		)
		{ after(grammarAccess.getSetStateStatementAccess().getStateStateCrossReference_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SetStateStatement__NextAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSetStateStatementAccess().getNextNEXTKeyword_2_1_0()); }
		(
			{ before(grammarAccess.getSetStateStatementAccess().getNextNEXTKeyword_2_1_0()); }
			'NEXT'
			{ after(grammarAccess.getSetStateStatementAccess().getNextNEXTKeyword_2_1_0()); }
		)
		{ after(grammarAccess.getSetStateStatementAccess().getNextNEXTKeyword_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__ProcessAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getProcessVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getProcessStatusExpressionAccess().getProcessVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessStatusExpressionAccess().getProcessVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getProcessVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__ActiveAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getActiveACTIVEKeyword_4_0_0()); }
		(
			{ before(grammarAccess.getProcessStatusExpressionAccess().getActiveACTIVEKeyword_4_0_0()); }
			'ACTIVE'
			{ after(grammarAccess.getProcessStatusExpressionAccess().getActiveACTIVEKeyword_4_0_0()); }
		)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getActiveACTIVEKeyword_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__InactiveAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getInactiveINACTIVEKeyword_4_1_0()); }
		(
			{ before(grammarAccess.getProcessStatusExpressionAccess().getInactiveINACTIVEKeyword_4_1_0()); }
			'INACTIVE'
			{ after(grammarAccess.getProcessStatusExpressionAccess().getInactiveINACTIVEKeyword_4_1_0()); }
		)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getInactiveINACTIVEKeyword_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__StopAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getStopSTOPKeyword_4_2_0()); }
		(
			{ before(grammarAccess.getProcessStatusExpressionAccess().getStopSTOPKeyword_4_2_0()); }
			'STOP'
			{ after(grammarAccess.getProcessStatusExpressionAccess().getStopSTOPKeyword_4_2_0()); }
		)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getStopSTOPKeyword_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessStatusExpression__ErrorAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessStatusExpressionAccess().getErrorERRORKeyword_4_3_0()); }
		(
			{ before(grammarAccess.getProcessStatusExpressionAccess().getErrorERRORKeyword_4_3_0()); }
			'ERROR'
			{ after(grammarAccess.getProcessStatusExpressionAccess().getErrorERRORKeyword_4_3_0()); }
		)
		{ after(grammarAccess.getProcessStatusExpressionAccess().getErrorERRORKeyword_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StartProcessStatement__ProcessAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStartProcessStatementAccess().getProcessVariableCrossReference_0_1_2_0()); }
		(
			{ before(grammarAccess.getStartProcessStatementAccess().getProcessVariableIDTerminalRuleCall_0_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStartProcessStatementAccess().getProcessVariableIDTerminalRuleCall_0_1_2_0_1()); }
		)
		{ after(grammarAccess.getStartProcessStatementAccess().getProcessVariableCrossReference_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StopProcessStatement__ProcessAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStopProcessStatementAccess().getProcessVariableCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getStopProcessStatementAccess().getProcessVariableIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStopProcessStatementAccess().getProcessVariableIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getStopProcessStatementAccess().getProcessVariableCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ErrorProcessStatement__ProcessAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getErrorProcessStatementAccess().getProcessVariableCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getErrorProcessStatementAccess().getProcessVariableIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getErrorProcessStatementAccess().getProcessVariableIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getErrorProcessStatementAccess().getProcessVariableCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__ConstAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getConstConstantParserRuleCall_1_0_0()); }
		ruleConstant
		{ after(grammarAccess.getTimeoutStatementAccess().getConstConstantParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__VariableAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getVariableSymbolicVariableCrossReference_1_1_0()); }
		(
			{ before(grammarAccess.getTimeoutStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTimeoutStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_1_0_1()); }
		)
		{ after(grammarAccess.getTimeoutStatementAccess().getVariableSymbolicVariableCrossReference_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeoutStatement__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeoutStatementAccess().getStatementStatementListParserRuleCall_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getTimeoutStatementAccess().getStatementStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__FbAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFBInvocationAccess().getFbSymbolicVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFBInvocationAccess().getFbSymbolicVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFBInvocationAccess().getFbSymbolicVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFBInvocationAccess().getFbSymbolicVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FBInvocation__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFBInvocationAccess().getArgsParamAssignmentElementsParserRuleCall_2_0()); }
		ruleParamAssignmentElements
		{ after(grammarAccess.getFBInvocationAccess().getArgsParamAssignmentElementsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getFunctionFunctionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ArgsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getArgsParamAssignmentElementsParserRuleCall_2_0()); }
		ruleParamAssignmentElements
		{ after(grammarAccess.getFunctionCallAccess().getArgsParamAssignmentElementsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAssignmentElementsAccess().getElementsParamAssignmentParserRuleCall_0_0()); }
		ruleParamAssignment
		{ after(grammarAccess.getParamAssignmentElementsAccess().getElementsParamAssignmentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignmentElements__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAssignmentElementsAccess().getElementsParamAssignmentParserRuleCall_1_1_0()); }
		ruleParamAssignment
		{ after(grammarAccess.getParamAssignmentElementsAccess().getElementsParamAssignmentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAssignmentAccess().getVariableSymbolicVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getParamAssignmentAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParamAssignmentAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getParamAssignmentAccess().getVariableSymbolicVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__AssigAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAssignmentAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
		ruleAssignmentType
		{ after(grammarAccess.getParamAssignmentAccess().getAssigAssignmentTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamAssignmentAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getParamAssignmentAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
		ruleXorExpression
		{ after(grammarAccess.getExpressionAccess().getRightXorExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XorExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
		ruleAndExpression
		{ after(grammarAccess.getXorExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getRightCompExpressionParserRuleCall_1_2_0()); }
		ruleCompExpression
		{ after(grammarAccess.getAndExpressionAccess().getRightCompExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__CompOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompExpressionAccess().getCompOpCompOperatorEnumRuleCall_1_1_0()); }
		ruleCompOperator
		{ after(grammarAccess.getCompExpressionAccess().getCompOpCompOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompExpressionAccess().getRightEquExpressionParserRuleCall_1_2_0()); }
		ruleEquExpression
		{ after(grammarAccess.getCompExpressionAccess().getRightEquExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__EquOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquExpressionAccess().getEquOpEquOperatorEnumRuleCall_1_1_0()); }
		ruleEquOperator
		{ after(grammarAccess.getEquExpressionAccess().getEquOpEquOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EquExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEquExpressionAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
		ruleAddExpression
		{ after(grammarAccess.getEquExpressionAccess().getRightAddExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__AddOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getAddOpAddOperatorEnumRuleCall_1_1_0()); }
		ruleAddOperator
		{ after(grammarAccess.getAddExpressionAccess().getAddOpAddOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddExpressionAccess().getRightMulExpressionParserRuleCall_1_2_0()); }
		ruleMulExpression
		{ after(grammarAccess.getAddExpressionAccess().getRightMulExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__MulOpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulExpressionAccess().getMulOpMulOperatorEnumRuleCall_1_1_0()); }
		ruleMulOperator
		{ after(grammarAccess.getMulExpressionAccess().getMulOpMulOperatorEnumRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MulExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMulExpressionAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
		rulePowerExpression
		{ after(grammarAccess.getMulExpressionAccess().getRightPowerExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
		ruleUnaryExpression
		{ after(grammarAccess.getPowerExpressionAccess().getRightUnaryExpressionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__UnOpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getUnOpUnaryOperatorEnumRuleCall_1_0_0()); }
		ruleUnaryOperator
		{ after(grammarAccess.getUnaryExpressionAccess().getUnOpUnaryOperatorEnumRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
		rulePrimaryExpression
		{ after(grammarAccess.getUnaryExpressionAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ConstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getConstConstantParserRuleCall_0_0()); }
		ruleConstant
		{ after(grammarAccess.getPrimaryExpressionAccess().getConstConstantParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getVariableSymbolicVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPrimaryExpressionAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimaryExpressionAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPrimaryExpressionAccess().getVariableSymbolicVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArrayAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getArrayArrayVariableParserRuleCall_2_0()); }
		ruleArrayVariable
		{ after(grammarAccess.getPrimaryExpressionAccess().getArrayArrayVariableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ProcStatusAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getProcStatusProcessStatusExpressionParserRuleCall_3_0()); }
		ruleProcessStatusExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getProcStatusProcessStatusExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__FunCallAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getFunCallFunctionCallParserRuleCall_4_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getPrimaryExpressionAccess().getFunCallFunctionCallParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NestExprAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpressionAccess().getNestExprExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getPrimaryExpressionAccess().getNestExprExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementList__StatementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getStatementListAccess().getStatementsStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__VariableAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getVariableSymbolicVariableCrossReference_0_0_0()); }
		(
			{ before(grammarAccess.getAssignmentStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAssignmentStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_0_1()); }
		)
		{ after(grammarAccess.getAssignmentStatementAccess().getVariableSymbolicVariableCrossReference_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ArrayAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getArrayArrayVariableParserRuleCall_0_1_0()); }
		ruleArrayVariable
		{ after(grammarAccess.getAssignmentStatementAccess().getArrayArrayVariableParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentStatement__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentStatementAccess().getValueExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__MainCondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getMainCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getMainCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__MainStatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getMainStatementStatementListParserRuleCall_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getIfStatementAccess().getMainStatementStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfCondAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfCondExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getElseIfCondExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseIfStatementsAssignment_4_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseIfStatementsStatementListParserRuleCall_4_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getIfStatementAccess().getElseIfStatementsStatementListParserRuleCall_4_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseStatementAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseStatementStatementListParserRuleCall_5_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getIfStatementAccess().getElseStatementStatementListParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getCaseStatementAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__CaseElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getCaseElementsCaseElementParserRuleCall_3_0()); }
		ruleCaseElement
		{ after(grammarAccess.getCaseStatementAccess().getCaseElementsCaseElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseStatement__ElseStatementAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseStatementAccess().getElseStatementStatementListParserRuleCall_4_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getCaseStatementAccess().getElseStatementStatementListParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__CaseListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseElementAccess().getCaseListCaseListParserRuleCall_0_0()); }
		ruleCaseList
		{ after(grammarAccess.getCaseElementAccess().getCaseListCaseListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseElement__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseElementAccess().getStatementStatementListParserRuleCall_2_0()); }
		ruleStatementList
		{ after(grammarAccess.getCaseElementAccess().getStatementStatementListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__CaseListElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseListAccess().getCaseListElementCaseListElementParserRuleCall_0_0()); }
		ruleCaseListElement
		{ after(grammarAccess.getCaseListAccess().getCaseListElementCaseListElementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseList__CaseListElementAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseListAccess().getCaseListElementCaseListElementParserRuleCall_1_1_0()); }
		ruleCaseListElement
		{ after(grammarAccess.getCaseListAccess().getCaseListElementCaseListElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__NumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseListElementAccess().getNumSignedIntegerParserRuleCall_0_0()); }
		ruleSignedInteger
		{ after(grammarAccess.getCaseListElementAccess().getNumSignedIntegerParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CaseListElement__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCaseListElementAccess().getVariableSymbolicVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCaseListElementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCaseListElementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCaseListElementAccess().getVariableSymbolicVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getVariableSymbolicVariableCrossReference_1_0()); }
		(
			{ before(grammarAccess.getForStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getForStatementAccess().getVariableSymbolicVariableIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getForStatementAccess().getVariableSymbolicVariableCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ForListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getForListForListParserRuleCall_3_0()); }
		ruleForList
		{ after(grammarAccess.getForStatementAccess().getForListForListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StatementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getStatementStatementListParserRuleCall_5_0()); }
		ruleStatementList
		{ after(grammarAccess.getForStatementAccess().getStatementStatementListParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForListAccess().getStartExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getForListAccess().getStartExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__EndAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForListAccess().getEndExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getForListAccess().getEndExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForList__StepAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForListAccess().getStepExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getForListAccess().getStepExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__CondAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getCondExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getStatementStatementListParserRuleCall_3_0()); }
		ruleStatementList
		{ after(grammarAccess.getWhileStatementAccess().getStatementStatementListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getStatementStatementListParserRuleCall_1_0()); }
		ruleStatementList
		{ after(grammarAccess.getRepeatStatementAccess().getStatementStatementListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RepeatStatement__CondAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRepeatStatementAccess().getCondExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getRepeatStatementAccess().getCondExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolicVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolicVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSymbolicVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSpecificationInitAccess().getTypeDataTypeNameParserRuleCall_1_0()); }
		ruleDataTypeName
		{ after(grammarAccess.getSimpleSpecificationInitAccess().getTypeDataTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSpecificationInit__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimpleSpecificationInitAccess().getValueExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSimpleSpecificationInitAccess().getValueExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getVarsSymbolicVariableParserRuleCall_0_0()); }
		ruleSymbolicVariable
		{ after(grammarAccess.getVarListAccess().getVarsSymbolicVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarList__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarListAccess().getVarsSymbolicVariableParserRuleCall_1_1_0()); }
		ruleSymbolicVariable
		{ after(grammarAccess.getVarListAccess().getVarsSymbolicVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
		ruleVarList
		{ after(grammarAccess.getVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__SpecAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getSpecSimpleSpecificationInitParserRuleCall_2_0_0()); }
		ruleSimpleSpecificationInit
		{ after(grammarAccess.getVarInitDeclarationAccess().getSpecSimpleSpecificationInitParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__ArrSpecAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getArrSpecArraySpecificationInitParserRuleCall_2_1_0()); }
		ruleArraySpecificationInit
		{ after(grammarAccess.getVarInitDeclarationAccess().getArrSpecArraySpecificationInitParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarInitDeclaration__FbAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarInitDeclarationAccess().getFbFunctionBlockCrossReference_2_2_0()); }
		(
			{ before(grammarAccess.getVarInitDeclarationAccess().getFbFunctionBlockIDTerminalRuleCall_2_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarInitDeclarationAccess().getFbFunctionBlockIDTerminalRuleCall_2_2_0_1()); }
		)
		{ after(grammarAccess.getVarInitDeclarationAccess().getFbFunctionBlockCrossReference_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputVarDeclaration__VarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getInputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputVarDeclaration__VarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getOutputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputOutputVarDeclaration__VarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputOutputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getInputOutputVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__ConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		(
			{ before(grammarAccess.getVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
			'CONSTANT'
			{ after(grammarAccess.getVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		)
		{ after(grammarAccess.getVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarDeclaration__VarsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_3_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TempVarDeclaration__VarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getTempVarDeclarationAccess().getVarsVarInitDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
		ruleVarList
		{ after(grammarAccess.getExternalVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarInitDeclaration__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVarInitDeclarationAccess().getTypeDataTypeNameParserRuleCall_2_0()); }
		ruleDataTypeName
		{ after(grammarAccess.getExternalVarInitDeclarationAccess().getTypeDataTypeNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__ConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		(
			{ before(grammarAccess.getExternalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
			'CONSTANT'
			{ after(grammarAccess.getExternalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		)
		{ after(grammarAccess.getExternalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalVarDeclaration__VarsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalVarDeclarationAccess().getVarsExternalVarInitDeclarationParserRuleCall_3_0_0()); }
		ruleExternalVarInitDeclaration
		{ after(grammarAccess.getExternalVarDeclarationAccess().getVarsExternalVarInitDeclarationParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
		ruleVarList
		{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getVarListVarListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__LocationAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getLocationDIRECT_VARIABLETerminalRuleCall_2_0()); }
		RULE_DIRECT_VARIABLE
		{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getLocationDIRECT_VARIABLETerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarInitDeclaration__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarInitDeclarationAccess().getTypeDataTypeNameParserRuleCall_4_0()); }
		ruleDataTypeName
		{ after(grammarAccess.getGlobalVarInitDeclarationAccess().getTypeDataTypeNameParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__ConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		(
			{ before(grammarAccess.getGlobalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
			'CONSTANT'
			{ after(grammarAccess.getGlobalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
		)
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getConstCONSTANTKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__VarsSimpleAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getVarsSimpleVarInitDeclarationParserRuleCall_3_0_0_0()); }
		ruleVarInitDeclaration
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getVarsSimpleVarInitDeclarationParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalVarDeclaration__VarsAsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalVarDeclarationAccess().getVarsAsGlobalVarInitDeclarationParserRuleCall_3_1_0_0()); }
		ruleGlobalVarInitDeclaration
		{ after(grammarAccess.getGlobalVarDeclarationAccess().getVarsAsGlobalVarInitDeclarationParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__VarsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVarListAccess().getVarsProcessVariableParserRuleCall_0_0()); }
		ruleProcessVariable
		{ after(grammarAccess.getProcessVarListAccess().getVarsProcessVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarList__VarsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVarListAccess().getVarsProcessVariableParserRuleCall_1_1_0()); }
		ruleProcessVariable
		{ after(grammarAccess.getProcessVarListAccess().getVarsProcessVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__VarListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVarInitDeclarationAccess().getVarListProcessVarListParserRuleCall_0_0()); }
		ruleProcessVarList
		{ after(grammarAccess.getProcessVarInitDeclarationAccess().getVarListProcessVarListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarInitDeclaration__ProcessAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVarInitDeclarationAccess().getProcessProcessCrossReference_2_0()); }
		(
			{ before(grammarAccess.getProcessVarInitDeclarationAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessVarInitDeclarationAccess().getProcessProcessIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getProcessVarInitDeclarationAccess().getProcessProcessCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessVarDeclaration__VarsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessVarDeclarationAccess().getVarsProcessVarInitDeclarationParserRuleCall_2_0_0()); }
		ruleProcessVarInitDeclaration
		{ after(grammarAccess.getProcessVarDeclarationAccess().getVarsProcessVarInitDeclarationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVariableAccess().getVariableSymbolicVariableCrossReference_0_0()); }
		(
			{ before(grammarAccess.getArrayVariableAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getArrayVariableAccess().getVariableSymbolicVariableIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getArrayVariableAccess().getVariableSymbolicVariableCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayVariable__IndexAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayVariableAccess().getIndexExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayVariableAccess().getIndexExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__InitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySpecificationInitAccess().getInitArraySpecificationParserRuleCall_0_0()); }
		ruleArraySpecification
		{ after(grammarAccess.getArraySpecificationInitAccess().getInitArraySpecificationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecificationInit__ValuesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySpecificationInitAccess().getValuesArrayInitializationParserRuleCall_1_1_0()); }
		ruleArrayInitialization
		{ after(grammarAccess.getArraySpecificationInitAccess().getValuesArrayInitializationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__IntervalAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySpecificationAccess().getIntervalArrayIntervalParserRuleCall_2_0_0()); }
		ruleArrayInterval
		{ after(grammarAccess.getArraySpecificationAccess().getIntervalArrayIntervalParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySpecification__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArraySpecificationAccess().getTypeDataTypeNameParserRuleCall_5_0()); }
		ruleDataTypeName
		{ after(grammarAccess.getArraySpecificationAccess().getTypeDataTypeNameParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayIntervalAccess().getStartExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayIntervalAccess().getStartExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInterval__EndAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayIntervalAccess().getEndExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayIntervalAccess().getEndExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayInitializationAccess().getElementsExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayInitializationAccess().getElementsExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitialization__ElementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayInitializationAccess().getElementsExpressionParserRuleCall_2_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayInitializationAccess().getElementsExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__IntervalAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getIntervalINTERVALTerminalRuleCall_3_0()); }
		RULE_INTERVAL
		{ after(grammarAccess.getTimeLiteralAccess().getIntervalINTERVALTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NumAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumNumericLiteralParserRuleCall_0_0()); }
		ruleNumericLiteral
		{ after(grammarAccess.getConstantAccess().getNumNumericLiteralParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getTimeTimeLiteralParserRuleCall_1_0()); }
		ruleTimeLiteral
		{ after(grammarAccess.getConstantAccess().getTimeTimeLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__OthAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getOthAlternatives_2_0()); }
		(rule__Constant__OthAlternatives_2_0)
		{ after(grammarAccess.getConstantAccess().getOthAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__ISigAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedIntegerAccess().getISigHyphenMinusKeyword_0_0()); }
		(
			{ before(grammarAccess.getSignedIntegerAccess().getISigHyphenMinusKeyword_0_0()); }
			'-'
			{ after(grammarAccess.getSignedIntegerAccess().getISigHyphenMinusKeyword_0_0()); }
		)
		{ after(grammarAccess.getSignedIntegerAccess().getISigHyphenMinusKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInteger__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignedIntegerAccess().getValueINTEGERTerminalRuleCall_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getSignedIntegerAccess().getValueINTEGERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getTypeIntegerTypeNameParserRuleCall_0_0_0()); }
		ruleIntegerTypeName
		{ after(grammarAccess.getIntegerLiteralAccess().getTypeIntegerTypeNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getValueSignedIntegerParserRuleCall_1_0()); }
		ruleSignedInteger
		{ after(grammarAccess.getIntegerLiteralAccess().getValueSignedIntegerParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__TypeAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getTypeREAL_TYPE_NAMETerminalRuleCall_0_0_0()); }
		RULE_REAL_TYPE_NAME
		{ after(grammarAccess.getRealLiteralAccess().getTypeREAL_TYPE_NAMETerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__RSigAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getRSigHyphenMinusKeyword_1_0()); }
		(
			{ before(grammarAccess.getRealLiteralAccess().getRSigHyphenMinusKeyword_1_0()); }
			'-'
			{ after(grammarAccess.getRealLiteralAccess().getRSigHyphenMinusKeyword_1_0()); }
		)
		{ after(grammarAccess.getRealLiteralAccess().getRSigHyphenMinusKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_2_0()); }
		RULE_REAL
		{ after(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SINGLE_DECLARATION : 'SINGLE';

RULE_INTERVAL_DECLARATION : 'INTERVAL';

RULE_PRIORITY_DECLARATION : 'PRIORITY';

RULE_OR_OPERATOR : 'OR';

RULE_XOR_OPERATOR : 'XOR';

RULE_AND_OPERATOR : ('&'|'AND');

RULE_POWER_OPERATOR : '**';

RULE_TIME_PREF_LITERAL : 'T';

RULE_INTERVAL : (RULE_INTEGER 'd')? (RULE_INTEGER 'h')? (RULE_INTEGER 'm')? (RULE_INTEGER 's')? (RULE_INTEGER 'ms')?;

RULE_DIRECT_VARIABLE : '%' RULE_DIRECT_TYPE_PREFIX RULE_DIRECT_SIZE_PREFIX RULE_INTEGER ('.' RULE_INTEGER)*;

fragment RULE_DIRECT_TYPE_PREFIX : ('I'|'Q'|'M');

fragment RULE_DIRECT_SIZE_PREFIX : ('X'|'B'|'W'|'D'|'L');

RULE_SIGNED_INTEGER_TYPE_NAME : ('SINT'|'INT'|'DINT'|'LINT');

RULE_UNSIGNED_INTEGER_TYPE_NAME : ('USINT'|'UINT'|'UDINT'|'ULINT');

RULE_REAL_TYPE_NAME : ('REAL'|'LREAL');

RULE_BIT_STRING_TYPE_NAME : ('BOOL'|'BYTE'|'WORD'|'DWORD'|'LWORD');

RULE_TIME_TYPE_NAME : 'TIME';

RULE_STRING_TYPE_NAME : ('STRING'|'WSTRING');

RULE_INTEGER : RULE_DIGIT+;

RULE_REAL : RULE_INTEGER '.' RULE_INTEGER;

RULE_BINARY_INTEGER : '2#' RULE_BIT+;

RULE_OCTAL_INTEGER : '8#' RULE_OCTAL_DIGIT+;

RULE_HEX_INTEGER : '16#' RULE_HEX_DIGIT+;

RULE_BOOLEAN_LITERAL : ('TRUE'|'FALSE');

fragment RULE_LETTER : ('A'..'Z'|'a'..'z'|'_');

fragment RULE_BIT : ('0'|'1');

fragment RULE_OCTAL_DIGIT : '0'..'7';

fragment RULE_DIGIT : '0'..'9';

fragment RULE_HEX_DIGIT : (RULE_DIGIT|'A'..'F');

RULE_ID : RULE_LETTER (RULE_LETTER|RULE_DIGIT)*;

RULE_ML_COMMENT : ('/*' ( options {greedy=false;} : . )*'*/'|'(*' ( options {greedy=false;} : . )*'*)');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
